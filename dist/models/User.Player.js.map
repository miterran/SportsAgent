{"version":3,"sources":["../../src/models/User.Player.js"],"names":["Schema","options","discriminatorKey","PlayerSchema","nickname","type","String","required","isActivate","Boolean","default","isDeleted","Agent","Types","ObjectId","ref","wagerLimit","straight","parlay","basicTeaser","specialTeaser","bigTeaser","superTeaser","actionReverse","winReverse","maxWin","Number","min","max","minRisk","straightTeam","enum","parlayTeam","basicTeaserTeam","specialTeaserTeam","bigTeaserTeam","superTeaserTeam","actionReverseTeam","winReverseTeam","updatedAt","Date","now","PlayerClass","update","weekNum","$ne","isoWeek","$set","multi","loadClass","Player","discriminator"],"mappings":"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","file":"User.Player.js","sourcesContent":["import User from './User';\nimport moment from 'moment';\nimport mongoose from 'mongoose';\nconst Schema = mongoose.Schema;\n\nconst options = { discriminatorKey: 'role' };\n\nconst PlayerSchema = new Schema({\n\tnickname: { type: String, required: true },\n\tisActivate: { type: Boolean, default: true, required: true },\n\tisDeleted: { type: Boolean, default: false, required: true },\n\tAgent: { type: Schema.Types.ObjectId, ref: 'User', required: true },\n\twagerLimit: {\n\t\tstraight: { type: Boolean, default: true, required: true },\n\t\tparlay: { type: Boolean, default: true, required: true },\n\t\tbasicTeaser: { type: Boolean, default: true, required: true },\n\t\tspecialTeaser: { type: Boolean, default: true, required: true },\n\t\tbigTeaser: { type: Boolean, default: true, required: true },\n\t\tsuperTeaser: { type: Boolean, default: true, required: true },\n\t\tactionReverse: { type: Boolean, default: true, required: true },\n\t\twinReverse: { type: Boolean, default: true, required: true },\n\t\tmaxWin: { type: Number, min: 0, max: 100000, default: 200, required: true },\n\t\tminRisk: { type: Number, min: 10, max: 100000, default: 10, required: true },\n\t\tstraightTeam: { type: Number, enum: [ 1 ], default: 1, required: true },\n\t\tparlayTeam: { type: Number, enum: [ 2, 3, 4, 5, 6, 7, 8 ], default: 6, required: true },\n\t\tbasicTeaserTeam: { type: Number, enum: [ 2, 3, 4, 5, 6, 7, 8 ], default: 6, required: true },\n\t\tspecialTeaserTeam: { type: Number, enum: [ 2, 3, 4, 5, 6, 7, 8 ], default: 6, required: true },\n\t\tbigTeaserTeam: { type: Number, enum: [ 2, 3, 4, 5, 6, 7, 8 ], default: 6, required: true },\n\t\tsuperTeaserTeam: { type: Number, enum: [ 3 ], default: 3, required: true },\n\t\tactionReverseTeam: { type: Number, enum: [ 2, 3, 4 ], default: 2, required: true },\n\t\twinReverseTeam: { type: Number, enum: [ 2, 3, 4 ], default: 2, required: true },\n\t\tupdatedAt: { type: Date, default: Date.now, required: true },\n\t},\n\t// actionsOverview: {\n\t// \tstraight: {\n\t// \t\tWon: { type: Number, default: 0, required: true },\n\t// \t\tLost: { type: Number, default: 0, required: true },\n\t// \t\tPush: { type: Number, default: 0, required: true },\n\t// \t},\n\t// \tparlay: {\n\t// \t\tWon: { type: Number, default: 0, required: true },\n\t// \t\tLost: { type: Number, default: 0, required: true },\n\t// \t\tPush: { type: Number, default: 0, required: true },\n\t// \t},\n\t// \tbasicTeaser: {\n\t// \t\tWon: { type: Number, default: 0, required: true },\n\t// \t\tLost: { type: Number, default: 0, required: true },\n\t// \t\tPush: { type: Number, default: 0, required: true },\n\t// \t},\n\t// \tspecialTeaser: {\n\t// \t\tWon: { type: Number, default: 0, required: true },\n\t// \t\tLost: { type: Number, default: 0, required: true },\n\t// \t\tPush: { type: Number, default: 0, required: true },\n\t// \t},\n\t// \tbigTeaser: {\n\t// \t\tWon: { type: Number, default: 0, required: true },\n\t// \t\tLost: { type: Number, default: 0, required: true },\n\t// \t\tPush: { type: Number, default: 0, required: true },\n\t// \t},\n\t// \tsuperTeaser: {\n\t// \t\tWon: { type: Number, default: 0, required: true },\n\t// \t\tLost: { type: Number, default: 0, required: true },\n\t// \t\tPush: { type: Number, default: 0, required: true },\n\t// \t},\n\t// \tactionReverse: {\n\t// \t\tWon: { type: Number, default: 0, required: true },\n\t// \t\tLost: { type: Number, default: 0, required: true },\n\t// \t\tPush: { type: Number, default: 0, required: true },\n\t// \t},\n\t// \twinReverse: {\n\t// \t\tWon: { type: Number, default: 0, required: true },\n\t// \t\tLost: { type: Number, default: 0, required: true },\n\t// \t\tPush: { type: Number, default: 0, required: true },\n\t// \t},\n\t// },\n\t// oddsOverview:{\n\t// \t'MLine': {\n\t// \t\tWon: { type: Number, default: 0, required: true },\n\t// \t\tLost: { type: Number, default: 0, required: true },\n\t// \t\tPush: { type: Number, default: 0, required: true },\n\t// \t},\n\t// \t'Spread': {\n\t// \t\tWon: { type: Number, default: 0, required: true },\n\t// \t\tLost: { type: Number, default: 0, required: true },\n\t// \t\tPush: { type: Number, default: 0, required: true },\n\t// \t},\n\t// \tTotal: {\n\t// \t\tWon: { type: Number, default: 0, required: true },\n\t// \t\tLost: { type: Number, default: 0, required: true },\n\t// \t\tPush: { type: Number, default: 0, required: true },\n\t// \t},\n\t// \tDraw: {\n\t// \t\tWon: { type: Number, default: 0, required: true },\n\t// \t\tLost: { type: Number, default: 0, required: true },\n\t// \t\tPush: { type: Number, default: 0, required: true },\n\t// \t}\n\t// },\n\t// sportsOverview: {\n\t// \tBasketball: {\n\t// \t\tWon: { type: Number, default: 0, required: true },\n\t// \t\tLost: { type: Number, default: 0, required: true },\n\t// \t\tPush: { type: Number, default: 0, required: true },\n\t// \t},\n\t// \tFootball: {\n\t// \t\tWon: { type: Number, default: 0, required: true },\n\t// \t\tLost: { type: Number, default: 0, required: true },\n\t// \t\tPush: { type: Number, default: 0, required: true },\n\t// \t},\n\t// \tBaseball: {\n\t// \t\tWon: { type: Number, default: 0, required: true },\n\t// \t\tLost: { type: Number, default: 0, required: true },\n\t// \t\tPush: { type: Number, default: 0, required: true },\n\t// \t},\n\t// \tHockey: {\n\t// \t\tWon: { type: Number, default: 0, required: true },\n\t// \t\tLost: { type: Number, default: 0, required: true },\n\t// \t\tPush: { type: Number, default: 0, required: true },\n\t// \t},\n\t// \tSoccer: {\n\t// \t\tWon: { type: Number, default: 0, required: true },\n\t// \t\tLost: { type: Number, default: 0, required: true },\n\t// \t\tPush: { type: Number, default: 0, required: true },\n\t// \t},\n\t// \tFighting: {\n\t// \t\tWon: { type: Number, default: 0, required: true },\n\t// \t\tLost: { type: Number, default: 0, required: true },\n\t// \t\tPush: { type: Number, default: 0, required: true },\n\t// \t},\n\t// \t'ESports': {\n\t// \t\tWon: { type: Number, default: 0, required: true },\n\t// \t\tLost: { type: Number, default: 0, required: true },\n\t// \t\tPush: { type: Number, default: 0, required: true },\n\t// \t},\n\t// }\n}, options );\n\nclass PlayerClass { \n\tstatic resetWeeklyBalanceToZero(){\n\t\treturn this.update({ weekNum: { $ne: moment().isoWeek() } }, { $set: { weekNum: moment().isoWeek(), 'credit.balance': 0 }}, { multi: true });\n\t}\n}\n\nPlayerSchema.loadClass(PlayerClass);\n\nconst Player = User.discriminator('Player', PlayerSchema);\n\nexport default Player;\n"]}