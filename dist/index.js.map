{"version":3,"sources":["../src/index.js"],"names":["dirname","__dirname","connect","mongoURL","useMongoClient","Promise","app","use","json","urlencoded","extended","static","join","get","req","res","userCounter","scheduleJob","UPDATE_ODD_MIN","console","log","length","deleteExpiredUnpickEvents","resetWeeklyBalanceToZero","schema","context","user","endpointURL","subscriptionsEndpoint","WSURL","ws","listen","process","env","PORT","execute","subscribe","onConnect","connectionParams","webSocket","includes","upgradeReq","headers","push","onDisconnect","filter","server","path"],"mappings":"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","file":"index.js","sourcesContent":["import 'babel-polyfill';\n\nimport config from './config';\nimport express from 'express';\nimport path from 'path';\nimport { createServer } from 'http';\nimport cors from 'cors';\nimport morgan from 'morgan';\nimport bodyParser from 'body-parser';\nimport compress from 'compression';\nimport helmet from 'helmet';\nimport methodOverride from 'method-override';\n\nimport schedule from 'node-schedule';\n\nimport mongoose from 'mongoose';\nimport bluebird from 'bluebird';\n\nimport { graphqlExpress, graphiqlExpress } from 'apollo-server-express';\nimport { execute, subscribe } from 'graphql';\nimport { SubscriptionServer } from 'subscriptions-transport-ws';\nimport schema from './graphql/schema';\n\nimport addUserToReq from './middleware/addUserToReq';\n\nimport updateEvents from './queues/updateEvents';\n//import updateTables from './queues/updateTables';\n\nimport moment from 'moment';\n\nimport updateScoreFromPickMon from './services/updateScores/pickMon';\nimport updateScoreFromJsonOdd from './services/updateScores/jsonOdd';\nimport updatePicks from './services/updatePicks';\nimport updateBetOrders from './services/updateBetOrders';\nimport Event from './models/Event';\nimport Player from './models/User.Player';\nimport Pick from './models/Pick';\n// import apnProvider from './apn'\n// import apn from 'apn'\n\nexport const dirname = __dirname;\nmongoose.connect(config.mongoURL, { useMongoClient: true });\nmongoose.Promise = bluebird;\nconst app = express();\napp.use(morgan('dev'));\napp.use(cors());\napp.use(helmet());\napp.use(compress());\napp.use(methodOverride());\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\n\n\n\napp.use('/images/teamlogos', express.static(path.join(__dirname, '/public/images/teamlogos/baseball')));\napp.use('/images/teamlogos', express.static(path.join(__dirname, '/public/images/teamlogos/basketball')));\napp.use('/images/teamlogos', express.static(path.join(__dirname, '/public/images/teamlogos/football')));\napp.use('/images/teamlogos', express.static(path.join(__dirname, '/public/images/teamlogos/ncaa')));\napp.use('/images/teamlogos', express.static(path.join(__dirname, '/public/images/teamlogos/hockey')));\napp.use('/images/teamlogos', express.static(path.join(__dirname, '/public/images/teamlogos/sport')));\n//app.use(express.static(path.resolve(__dirname, '../client/build')))\napp.get('/hi', async (req, res) => {\n\t// const agentNotify = new apn.Notification({\n\t// \tsound: 'ping.aiff',\n\t// \talert: 'message',\n\t// \ttopic: config.APN_TOPIC,\n\t// \tpayload: { BetOrder: 'test' }\n\t// })\n\t// await apnProvider.send(agentNotify, '671c147576304b7ccb4b9b327149273ce701256af01f553555e7c13d5ff7b639').then(res => console.log(res))\n\t// apnProvider.shutdown();\n//\tawait updateEvents()\n\tres.json('done')\n})\n\nlet userCounter = [];\n\nschedule.scheduleJob(`*/${config.UPDATE_ODD_MIN} * * * *`, async () => {\n\t// eslint-disable-next-line\n\tconsole.log('scheduleJob usercounter', moment(), 'online users ' + userCounter.length);\n\tif(userCounter.length > 0){\n\t\tawait updateEvents();\n\t}\n});\nschedule.scheduleJob('*/15 * * * *', async () => {\n\tawait updateScoreFromJsonOdd();\n\tawait updateScoreFromPickMon();\n\tawait updatePicks();\n\tawait updateBetOrders();\n\tawait Event.deleteExpiredUnpickEvents();\n\tawait Player.resetWeeklyBalanceToZero();\n});\n\napp.use(addUserToReq);\n\napp.use('/graphql', \n\tgraphqlExpress((req) => {\n\t\treturn ({\n\t\t\tschema, \n\t\t\tcontext: { user: req.user }\n\t\t});\n\t})\n);\n\napp.use('/graphiql', graphiqlExpress({ \n\tendpointURL: '/graphql',\n\tsubscriptionsEndpoint: config.WSURL\n}));\n\n//app.get('*', (req, res) => res.sendFile(path.resolve(__dirname, '../client/build', 'index.html')))\n\nconst ws = createServer(app);\n\nws.listen(process.env.PORT, () => { \n\t// eslint-disable-next-line\n\tconsole.log(`Apollo Server is now running on http://localhost:${process.env.PORT}`); \n\n\tnew SubscriptionServer({\n\t\texecute,\n\t\tsubscribe,\n\t\tschema,\n\t\tonConnect: async (connectionParams, webSocket) => {\n\t\t\tif(!userCounter.includes(webSocket.upgradeReq.headers['sec-websocket-key'])) {\n\t\t\t\tuserCounter.push(webSocket.upgradeReq.headers['sec-websocket-key']);\n\t\t\t}\n\t\t\t// eslint-disable-next-line\n\t\t\tconsole.log(userCounter.length);\n\t\t\tif(userCounter.length === 1){ \n\t\t\t\tawait updateEvents()\n\t\t\t}\n\t\t},\n\t\tonDisconnect: (webSocket) => {\n\t\t\tuserCounter = userCounter.filter(user => user !== webSocket.upgradeReq.headers['sec-websocket-key']);\n//\t\t\teslint-disable-next-line\n\t\t\tconsole.log(userCounter.length);\n\t\t},\n\t}, {\n\t\tserver: ws,\n\t\tpath: '/subscriptions',\n\t});\n\n});\n\n"]}