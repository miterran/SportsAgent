{"version":3,"sources":["../src/config.js"],"names":["require","config","envVarsSchema","object","NODE_ENV","string","allow","default","PORT","number","MONGOOSE_DEBUG","boolean","when","is","equal","then","otherwise","JWT_SECRET","required","description","MONGO_URL","JSONODD_API_KEY","PICKMON_UID","PICKMON_KEY","HOSTURL","WSURL","GMAIL","GPASSWORD","MK","APPLE_KEY_ID","APPLE_TEAM_ID","APN_TOPIC","UPDATE_ODD_MIN","APPLE_PASSWORD","unknown","validate","process","env","error","envVars","value","Error","message","port","mongooseDebug","jwtSecret","mongoURL","jsonOddApiKey","pickMon_UID","pickMon_Key"],"mappings":"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","file":"config.js","sourcesContent":["import Joi from 'joi';\n\n// require and configure dotenv, will load vars in .env in PROCESS.ENV\nrequire('dotenv').config();\n\n// define validation for all the env vars\nconst envVarsSchema = Joi.object({\n\tNODE_ENV: Joi.string().allow(['development', 'production', 'test', 'provision']).default('development'),\n\tPORT: Joi.number().default(8080),\n\tMONGOOSE_DEBUG: Joi.boolean().when('NODE_ENV', {\n\t\tis: Joi.string().equal('development'),\n\t\tthen: Joi.boolean().default(true),\n\t\totherwise: Joi.boolean().default(false)\n\t}),\n\tJWT_SECRET: Joi.string().required().description('JWT Secret required to sign'),\n\tMONGO_URL: Joi.string().required().description('Mongo DB host url'),\n\tJSONODD_API_KEY: Joi.string().required().description('JSON ODD API KEY'),\n\tPICKMON_UID: Joi.string().required().description('PICKMON UID'),\n\tPICKMON_KEY: Joi.string().required().description('PICKMON KEY'),\n\tHOSTURL: Joi.string().required().description('HOSTURL'),\n\tWSURL: Joi.string().required().description('WSURL'),\n\tGMAIL: Joi.string().required().description('GMAIL'),\n\tGPASSWORD: Joi.string().required().description('GPASSWORD'),\n\tMK: Joi.string().required().description('MK'),\n\tAPPLE_KEY_ID: Joi.string().required().description('G29A9K8D5P'),\n\tAPPLE_TEAM_ID: Joi.string().required().description('36Z53Z94LV'),\n\tAPN_TOPIC: Joi.string().required().description('org.reactjs.native.example.SportsAgentApp'),\n\tUPDATE_ODD_MIN: Joi.string().required().description('update odd every ? min'),\n\tAPPLE_PASSWORD: Joi.string().required().description('apple store password'),\n}).unknown()\n\t.required();\n\nconst { error, value: envVars } = Joi.validate(process.env, envVarsSchema);\nif (error) {\n\tthrow new Error(`Config validation error: ${error.message}`);\n}\n\nconst config = {\n\tenv: envVars.NODE_ENV,\n\tport: envVars.PORT,\n\tmongooseDebug: envVars.MONGOOSE_DEBUG,\n\tjwtSecret: envVars.JWT_SECRET,\n\tmongoURL: envVars.MONGO_URL,\n\tjsonOddApiKey: envVars.JSONODD_API_KEY,\n\tpickMon_UID: envVars.PICKMON_UID,\n\tpickMon_Key: envVars.PICKMON_KEY,\n\tHOSTURL: envVars.HOSTURL,\n\tWSURL: envVars.WSURL,\n\tGMAIL: envVars.GMAIL,\n\tGPASSWORD: envVars.GPASSWORD,\n\tMK: envVars.MK,\n\tAPPLE_KEY_ID: envVars.APPLE_KEY_ID,\n\tAPPLE_TEAM_ID: envVars.APPLE_TEAM_ID,\n\tAPN_TOPIC: envVars.APN_TOPIC,\n\tUPDATE_ODD_MIN: envVars.UPDATE_ODD_MIN,\n\tAPPLE_PASSWORD: envVars.APPLE_PASSWORD,\n};\n\nexport default config;\n"]}