{"version":3,"sources":["../../../src/services/updateEvents/jsonOdd.js"],"names":["axiosJsonOdd","create","headers","jsonOddApiKey","updateEventOddFromJsonOdd","isActivate","console","log","findOne","name","then","res","options","jsonOddSports","get","data","catch","jsonEvents","isEmpty","event","jsonSport","find","idx","Sport","activate","theSport","sport","theMatchTime","utc","MatchTime","add","endOf","isBefore","isAfter","theLeague","hasOwnProperty","League","Name","league","theRegion","DisplayRegion","theAwayPitcher","AwayPitcher","theHomePitcher","HomePitcher","theAwayROT","AwayROT","theHomeROT","HomeROT","awayLogo","AwayTeam","split","join","toLowerCase","replace","team","region","detail","HomeTeam","homeLogo","folderName","awayLogoExists","findOneAndUpdate","upsert","homeLogoExists","Odds","odd","thePeriod","OddType","theUniqueID","format","newEvent","ID","uniqueID","provider","bookmaker","SiteID","toString","period","matchTime","away","awayROT","awayPitcher","home","homeROT","homePitcher","score","awayMoneyLine","Number","MoneyLineAway","awaySpreadPoint","PointSpreadAway","awaySpreadLine","PointSpreadAwayLine","homeMoneyLine","MoneyLineHome","homeSpreadPoint","PointSpreadHome","homeSpreadLine","PointSpreadHomeLine","totalOverPoint","TotalNumber","totalOverLine","OverLine","totalUnderPoint","totalUnderLine","UnderLine","drawLine","DrawLine","cutOffAt","isFinished","status","updatedAt","title","content"],"mappings":"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","file":"jsonOdd.js","sourcesContent":["import config from '../../config';\nimport Event from '../../models/Event';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport moment from 'moment';\nimport renameEventPeriod from '../../utils/functions/renameEventPeriod';\nimport SystemLog from '../../models/SystemLog';\nimport Provider from '../../models/Provider';\nimport LogoCollect from '../../models/LogoCollect';\n\nimport { dirname } from '../../index';\nimport fileExists from 'file-exists';\n\n\nconst axiosJsonOdd = axios.create({ headers: {'JsonOdds-API-Key': config.jsonOddApiKey}});\n\nconst updateEventOddFromJsonOdd = async () => {\n\ttry{\n\t\tif(!await Provider.isActivate('jo')) return; \n\t\t//eslint-disable-next-line\n\t\tconsole.log('update jsonOdd odd');\n\t\tconst jsonOddSports = await Provider.findOne({ name: 'jo' }).then(res => res.options);\n\t\tconst jsonEvents = await axiosJsonOdd.get('https://jsonodds.com/api/odds?source=0').then(res => res.data).catch(() => []);\n\t\tif(_.isEmpty(jsonEvents)) return;\n\t\tfor( let event of jsonEvents ) {\n\t\t\tconst jsonSport = _.find(jsonOddSports, { idx: event.Sport, activate: true } );\n\t\t\tif(!jsonSport) continue;\n\t\t\tconst theSport = jsonSport.sport;\n\t\t\tconst theMatchTime = moment.utc(event.MatchTime);\n\t\t\tif(moment().add(5, 'days').endOf('day').isBefore(theMatchTime)) continue;\n\t\t\tif(moment().isAfter(theMatchTime)) continue;\n\t\t\tif(moment().add(5, 'd').endOf('day').isBefore(theMatchTime)) continue;\n\t\t\tconst theLeague = event.Sport === 7 ? ( event.hasOwnProperty('League') && event.League.hasOwnProperty('Name') ? event.League.Name : '' ) : jsonSport.league;\n\t\t\tif(theLeague === '') continue;\n\t\t\tconst theRegion = event.Sport === 7 ? event.DisplayRegion : null;\n\t\t\tconst theAwayPitcher = theSport === 'Baseball' ? (!_.isEmpty(event.AwayPitcher) ? event.AwayPitcher : 'Action') : null;\n\t\t\tconst theHomePitcher = theSport === 'Baseball' ? (!_.isEmpty(event.HomePitcher) ? event.HomePitcher : 'Action') : null;\n\t\t\tconst theAwayROT = event.AwayROT;\n\t\t\tconst theHomeROT = event.HomeROT;\n\n\t\t\t//\n\t\t\tconst awayLogo = {\n\t\t\t\tname: event.AwayTeam.split(' ').join('_').toLowerCase().replace(/\\.|\\'|\\&/g, ''),\n\t\t\t\tteam: event.AwayTeam,\n\t\t\t\tsport: theSport,\n\t\t\t\tleague: theLeague,\n\t\t\t\tregion: theRegion,\n\t\t\t\tdetail: `${event.AwayTeam} ${theAwayROT} vs ${event.HomeTeam} ${theHomeROT}`\n\t\t\t};\n\t\t\tconst homeLogo = {\n\t\t\t\tname: event.HomeTeam.split(' ').join('_').toLowerCase().replace(/\\.|\\'|\\&/g, ''),\n\t\t\t\tteam: event.HomeTeam,\n\t\t\t\tsport: theSport,\n\t\t\t\tleague: theLeague,\n\t\t\t\tregion: theRegion,\n\t\t\t\tdetail: `${event.AwayTeam} ${theAwayROT} vs ${event.HomeTeam} ${theHomeROT}`\n\t\t\t};\n\n\t\t\tconst folderName = (theLeague === 'NCAAB' || theLeague === 'NCAAF') ? 'NCAA' : theSport;\n\n\t\t\tconst awayLogoExists = await fileExists(dirname + `/public/images/teamlogos/${folderName}/${awayLogo.name}.png`);\n\t\t\tif(!awayLogoExists) { await LogoCollect.findOneAndUpdate({ name: awayLogo.name }, awayLogo, { upsert: true }); }\n\t\t\tconst homeLogoExists = await fileExists(dirname + `/public/images/teamlogos/${folderName}/${homeLogo.name}.png`);\n\t\t\tif(!homeLogoExists) { await LogoCollect.findOneAndUpdate({ name: homeLogo.name }, homeLogo, { upsert: true }); }\n\t\t\t//\n\n\n\t\t\tfor( let odd of event.Odds ) {\n\t\t\t\tconst thePeriod = renameEventPeriod(odd.OddType); if(thePeriod === 'unknow') continue;\n\t\t\t\tconst theUniqueID = `${moment(theMatchTime).format('MMDDYY')}_${theAwayROT}_${theHomeROT}_${theSport}_${thePeriod.replace(/\\s/g,'')}`;\n\t\t\t\tlet newEvent = {\n\t\t\t\t\tID: odd.ID,\n\t\t\t\t\tuniqueID: theUniqueID,\n\t\t\t\t\tprovider: 'jo',\n\t\t\t\t\tbookmaker: odd.SiteID.toString(),\n\t\t\t\t\tsport: theSport,\n\t\t\t\t\tperiod: thePeriod,\n\t\t\t\t\tleague: theLeague,\n\t\t\t\t\tregion: theRegion,\n\t\t\t\t\tmatchTime: theMatchTime,\n\t\t\t\t\tteam: {\n\t\t\t\t\t\taway: event.AwayTeam,\n\t\t\t\t\t\tawayROT: theAwayROT,\n\t\t\t\t\t\tawayPitcher: theAwayPitcher,\n\t\t\t\t\t\thome: event.HomeTeam,\n\t\t\t\t\t\thomeROT: theHomeROT,\n\t\t\t\t\t\thomePitcher: theHomePitcher,\n\t\t\t\t\t},\n\t\t\t\t\tscore: {\n\t\t\t\t\t\thome: null,\n\t\t\t\t\t\taway: null,\n\t\t\t\t\t},\n\t\t\t\t\todd: {\n\t\t\t\t\t\tawayMoneyLine: Number(odd.MoneyLineAway) || null,\n\t\t\t\t\t\tawaySpreadPoint: Number(odd.PointSpreadAway) || null,\n\t\t\t\t\t\tawaySpreadLine: Number(odd.PointSpreadAwayLine) || null,\n\t\t\t\t\t\thomeMoneyLine: Number(odd.MoneyLineHome) || null,\n\t\t\t\t\t\thomeSpreadPoint: Number(odd.PointSpreadHome) || null,\n\t\t\t\t\t\thomeSpreadLine: Number(odd.PointSpreadHomeLine) || null,\n\t\t\t\t\t\ttotalOverPoint: Number(odd.TotalNumber) || null,\n\t\t\t\t\t\ttotalOverLine: Number(odd.OverLine) || null,\n\t\t\t\t\t\ttotalUnderPoint: Number(odd.TotalNumber) || null,\n\t\t\t\t\t\ttotalUnderLine: Number(odd.UnderLine) || null,\n\t\t\t\t\t\tdrawLine: Number(odd.DrawLine) || null ,\n\t\t\t\t\t},\n\t\t\t\t\tcutOffAt: moment(theMatchTime),\n\t\t\t\t\tisFinished: false,\n\t\t\t\t\tstatus: 'Pending',\n\t\t\t\t\tupdatedAt: moment(),\n\t\t\t\t};\n\t\t\t\tawait Event.findOneAndUpdate({ uniqueID: newEvent.uniqueID }, newEvent, { upsert: true });\n\t\t\t}\n\t\t}\n\t} catch (e) {\n\t\tawait SystemLog.create({ title: 'update json odd event failed', content: e, status: 'danger'});\n\t}\n};\n\nexport default updateEventOddFromJsonOdd;"]}