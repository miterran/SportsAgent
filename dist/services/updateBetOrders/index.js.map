{"version":3,"sources":["../../../src/services/updateBetOrders/index.js"],"names":["updateBetOrderResult","console","log","find","isClosed","status","populate","path","select","betOrders","isEmpty","betOrder","allPicksPending","every","Picks","update","findOneAndUpdate","_id","$set","merge","updatedAt","new","updatedBetOrder","create","title","content","Player","Number","resultAmount","bet","atRisk","player","Agent","agent","ID","type","description","username","amount","balance","credit","notification","afterBetOrder","agentNotify","Notification","sound","alert","topic","APN_TOPIC","payload","BetOrder","send","deviceToken","playerNotify","shutdown"],"mappings":"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","file":"index.js","sourcesContent":["import _ from 'lodash';\nimport moment from 'moment';\nimport BetOrder from '../../models/BetOrder';\nimport Player from '../../models/User.Player';\nimport Agent from '../../models/User.Agent';\nimport SystemLog from '../../models/SystemLog';\nimport settleBetOrder from '../../utils/functions/settleBetOrder';\nimport Transaction from '../../models/Transaction';\nimport config from '../../config'\nimport apnProvider from '../../apn'\nimport apn from 'apn'\n\nconst updateBetOrderResult = async () => {\n\t// eslint-disable-next-line\n\tconsole.log('update bet order result')\n\ttry {\n\t\t\n\t\tconst betOrders = await BetOrder.find({ isClosed: false, status: 'Pending' }, 'Player Agent bet Picks')\n\t\t.populate({ path: 'Picks', select: 'status marked.oddLine' });\n\n\t\tif(_.isEmpty(betOrders)) return;\n\n\t\tfor( let betOrder of betOrders ){\n\t\t\tlet allPicksPending = _.every(betOrder.Picks, { status: 'Pending' });\n\t\t\tif(allPicksPending) continue;\n\t\t\tlet update = settleBetOrder(betOrder);\n\t\t\tif(update.status === 'Pending') continue;\n\t\t\t\n\t\t\tlet updatedBetOrder = await BetOrder.findOneAndUpdate({ _id: betOrder._id }, { $set: _.merge(update, { updatedAt: moment() }) }, { new: true }).populate('Agent').populate('Player');\n\n\t\t\tif(updatedBetOrder.status === 'Review'){\n\t\t\t\tawait SystemLog.create({ title: 'BetOrder has Review', content: `${updatedBetOrder._id}`, status: 'danger'});\n\t\t\t}\n\n\n\t\t\tif(!updatedBetOrder.isClosed) continue;\n\n\t\t\tconst player = await Player.findOneAndUpdate({ _id: updatedBetOrder.Player }, {\n\t\t\t\t'$inc': {\n\t\t\t\t\t'credit.balance': Number(updatedBetOrder.resultAmount),\n\t\t\t\t\t'credit.pending': -Number(updatedBetOrder.bet.atRisk),\n\t\t\t\t},\n\t\t\t\t'$set': {\n\t\t\t\t\t'credit.updatedAt': moment()\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tconst agent = await Agent.findOneAndUpdate({ _id: updatedBetOrder.Agent }, {\n\t\t\t\t'$inc': {\n\t\t\t\t\t'credit.balance': updatedBetOrder.status === 'Lost' ? Number(updatedBetOrder.resultAmount) : 0,\n\t\t\t\t\t'credit.pending': -Number(updatedBetOrder.bet.atRisk)\n\t\t\t\t},\n\t\t\t\t'$set': {\n\t\t\t\t\t'credit.updatedAt': moment()\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tnew: true\n\t\t\t});\n\n\t\t\tif(updatedBetOrder.status === 'Lost'){\n\t\t\t\tawait Transaction.create({ \n\t\t\t\t\tAgent: agent._id,\n\t\t\t\t\tID: updatedBetOrder.ID,\n\t\t\t\t\ttype: 'BetOrder',\n\t\t\t\t\tdescription: `(${player.username}) Lost a ${updatedBetOrder.title}`,\n\t\t\t\t\tamount: Number(updatedBetOrder.resultAmount),\n\t\t\t\t\tbalance: agent.credit.balance\n\t\t\t\t});\n\t\t\t}\n\n\n\t\t\tif(updatedBetOrder.Agent.notification.afterBetOrder){\n\t\t\t\tconst agentNotify = new apn.Notification({\n\t\t\t\t\tsound: 'ping.aiff',\n\t\t\t\t\talert: `${updatedBetOrder.Player.username}'s ${updatedBetOrder.title} had ${updatedBetOrder.status} ${updatedBetOrder.resultAmount === 0 ? '' : updatedBetOrder.resultAmount}`,\n\t\t\t\t\ttopic: config.APN_TOPIC,\n\t\t\t\t\tpayload: { BetOrder: updatedBetOrder.BetOrder }\n\t\t\t\t})\n\t\t\t\tawait apnProvider.send(agentNotify, updatedBetOrder.Agent.notification.deviceToken)\n\t\t\t}\n\n\t\t\tif(updatedBetOrder.Player.notification.afterBetOrder){\n\t\t\t\tconst playerNotify = new apn.Notification({\n\t\t\t\t\tsound: 'ping.aiff',\n\t\t\t\t\talert: `Your ${updatedBetOrder.title} had ${updatedBetOrder.status} ${updatedBetOrder.resultAmount === 0 ? '' : updatedBetOrder.resultAmount}`,\n\t\t\t\t\ttopic: config.APN_TOPIC,\n\t\t\t\t\tpayload: { BetOrder: updatedBetOrder.BetOrder }\n\t\t\t\t})\n\t\t\t\tawait apnProvider.send(playerNotify, updatedBetOrder.Player.notification.deviceToken)\n\t\t\t}\n\n\n\t\t\tapnProvider.shutdown();\n\n\n\n\t\t}\n\n\t} catch (e) {\n\t\tawait SystemLog.create({ title: 'update bet order result failed', content: `${e}`, status: 'danger'});\n\t}\n};\n\nexport default updateBetOrderResult;\n"]}