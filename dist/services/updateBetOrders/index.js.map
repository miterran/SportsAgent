{"version":3,"sources":["../../../src/services/updateBetOrders/index.js"],"names":["updateBetOrderResult","console","log","find","isClosed","status","populate","path","select","betOrders","isEmpty","betOrder","allPicksPending","every","Picks","update","findOneAndUpdate","_id","$set","merge","updatedAt","new","newBetOrder","Player","Number","resultAmount","bet","atRisk","player","Agent","agent","create","ID","type","description","username","title","amount","balance","credit","notification","afterBetOrder","agentNotify","Notification","sound","alert","topic","APN_TOPIC","payload","BetOrder","send","deviceToken","playerNotify","shutdown","content"],"mappings":"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","file":"index.js","sourcesContent":["import _ from 'lodash';\nimport moment from 'moment';\nimport BetOrder from '../../models/BetOrder';\nimport Player from '../../models/User.Player';\nimport Agent from '../../models/User.Agent';\nimport SystemLog from '../../models/SystemLog';\nimport settleBetOrder from '../../utils/functions/settleBetOrder';\nimport Transaction from '../../models/Transaction';\nimport config from '../../config'\nimport apnProvider from '../../apn'\nimport apn from 'apn'\n\nconst updateBetOrderResult = async () => {\n\t// eslint-disable-next-line\n\tconsole.log('update bet order result')\n\ttry {\n\t\t\n\t\tconst betOrders = await BetOrder.find({ isClosed: false, status: 'Pending' }, 'Player Agent bet Picks')\n\t\t.populate({ path: 'Picks', select: 'status marked.oddLine' });\n\n\t\tif(_.isEmpty(betOrders)) return;\n\n\t\tfor( let betOrder of betOrders ){\n\t\t\tlet allPicksPending = _.every(betOrder.Picks, { status: 'Pending' });\n\t\t\tif(allPicksPending) continue;\n\t\t\tlet update = settleBetOrder(betOrder);\n\t\t\tif(update.status === 'Pending') continue;\n\t\t\tlet newBetOrder = await BetOrder.findOneAndUpdate({ _id: betOrder._id }, { $set: _.merge(update, { updatedAt: moment() }) }, { new: true }).populate('Agent').populate('Player');\n\t\t\tif(!newBetOrder.isClosed) continue;\n\n\t\t\tconst player = await Player.findOneAndUpdate({ _id: newBetOrder.Player }, {\n\t\t\t\t'$inc': {\n\t\t\t\t\t'credit.balance': Number(newBetOrder.resultAmount),\n\t\t\t\t\t'credit.pending': -Number(newBetOrder.bet.atRisk),\n\t\t\t\t},\n\t\t\t\t'$set': {\n\t\t\t\t\t'credit.updatedAt': moment()\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tconst agent = await Agent.findOneAndUpdate({ _id: newBetOrder.Agent }, {\n\t\t\t\t'$inc': {\n\t\t\t\t\t'credit.balance': newBetOrder.status === 'Lost' ? Number(newBetOrder.resultAmount) : 0,\n\t\t\t\t\t'credit.pending': -Number(newBetOrder.bet.atRisk)\n\t\t\t\t},\n\t\t\t\t'$set': {\n\t\t\t\t\t'credit.updatedAt': moment()\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tnew: true\n\t\t\t});\n\n\t\t\tif(newBetOrder.status === 'Lost'){\n\t\t\t\tawait Transaction.create({ \n\t\t\t\t\tAgent: agent._id,\n\t\t\t\t\tID: newBetOrder.ID,\n\t\t\t\t\ttype: 'BetOrder',\n\t\t\t\t\tdescription: `(${player.username}) Lost ${newBetOrder.title}`,\n\t\t\t\t\tamount: Number(newBetOrder.resultAmount),\n\t\t\t\t\tbalance: agent.credit.balance\n\t\t\t\t});\n\t\t\t}\n\n\n\t\t\tif(newBetOrder.Agent.notification.afterBetOrder){\n\t\t\t\tconst agentNotify = new apn.Notification({\n\t\t\t\t\tsound: 'ping.aiff',\n\t\t\t\t\talert: `${newBetOrder.Player.username}'s ${newBetOrder.title} had ${newBetOrder.status} ${newBetOrder.resultAmount === 0 ? '' : newBetOrder.resultAmount}`,\n\t\t\t\t\ttopic: config.APN_TOPIC,\n\t\t\t\t\tpayload: { BetOrder: newBetOrder.BetOrder }\n\t\t\t\t})\n\t\t\t\tawait apnProvider.send(agentNotify, newBetOrder.Agent.notification.deviceToken)\n\t\t\t}\n\n\t\t\tif(newBetOrder.Player.notification.afterBetOrder){\n\t\t\t\tconst playerNotify = new apn.Notification({\n\t\t\t\t\tsound: 'ping.aiff',\n\t\t\t\t\talert: `Your ${newBetOrder.title} had ${newBetOrder.status} ${newBetOrder.resultAmount === 0 ? '' : newBetOrder.resultAmount}`,\n\t\t\t\t\ttopic: config.APN_TOPIC,\n\t\t\t\t\tpayload: { BetOrder: newBetOrder.BetOrder }\n\t\t\t\t})\n\t\t\t\tawait apnProvider.send(playerNotify, newBetOrder.Player.notification.deviceToken)\n\t\t\t}\n\n\n\t\t\tapnProvider.shutdown();\n\n\n\n\t\t}\n\n\t} catch (e) {\n\t\tawait SystemLog.create({ title: 'update bet order result failed', content: `${e}`, status: 'danger'});\n\t}\n};\n\nexport default updateBetOrderResult;\n"]}