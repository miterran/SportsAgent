{"version":3,"sources":["../../../src/services/updateBetOrders/index.js"],"names":["updateBetOrderResult","console","log","find","isClosed","status","populate","path","select","betOrders","isEmpty","betOrder","allPicksPending","every","Picks","update","findOneAndUpdate","_id","$set","merge","updatedAt","new","newBetOrder","Player","Number","resultAmount","bet","atRisk","player","Agent","agent","create","ID","type","description","username","title","amount","balance","credit","content"],"mappings":"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","file":"index.js","sourcesContent":["import _ from 'lodash';\nimport moment from 'moment';\nimport BetOrder from '../../models/BetOrder';\nimport Player from '../../models/User.Player';\nimport Agent from '../../models/User.Agent';\nimport SystemLog from '../../models/SystemLog';\nimport settleBetOrder from '../../utils/functions/settleBetOrder';\nimport Transaction from '../../models/Transaction';\n\nconst updateBetOrderResult = async () => {\n\t// eslint-disable-next-line\n\tconsole.log('update bet order result')\n\ttry {\n\t\t\n\t\tconst betOrders = await BetOrder.find({ isClosed: false, status: 'Pending' }, 'Player Agent bet Picks')\n\t\t.populate({ path: 'Picks', select: 'status marked.oddLine' });\n\n\t\tif(_.isEmpty(betOrders)) return;\n\n\t\tfor( let betOrder of betOrders ){\n\t\t\tlet allPicksPending = _.every(betOrder.Picks, { status: 'Pending' });\n\t\t\tif(allPicksPending) continue;\n\t\t\tlet update = settleBetOrder(betOrder);\n\t\t\tif(update.status === 'Pending') continue;\n\t\t\tlet newBetOrder = await BetOrder.findOneAndUpdate({ _id: betOrder._id }, { $set: _.merge(update, { updatedAt: moment() }) }, { new: true });\n\t\t\tif(!newBetOrder.isClosed) continue;\n\n\t\t\tconst player = await Player.findOneAndUpdate({ _id: newBetOrder.Player }, {\n\t\t\t\t'$inc': {\n\t\t\t\t\t'credit.balance': Number(newBetOrder.resultAmount),\n\t\t\t\t\t'credit.pending': -Number(newBetOrder.bet.atRisk),\n\t\t\t\t},\n\t\t\t\t'$set': {\n\t\t\t\t\t'credit.updatedAt': moment()\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tnew: true\n\t\t\t});\n\t\t\t\n\t\t\tconst agent = await Agent.findOneAndUpdate({ _id: newBetOrder.Agent }, {\n\t\t\t\t'$inc': {\n\t\t\t\t\t'credit.balance': newBetOrder.status === 'Lost' ? Number(newBetOrder.resultAmount) : 0,\n\t\t\t\t\t'credit.pending': -Number(newBetOrder.bet.atRisk)\n\t\t\t\t},\n\t\t\t\t'$set': {\n\t\t\t\t\t'credit.updatedAt': moment()\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tnew: true\n\t\t\t});\n\n\t\t\tif(newBetOrder.status === 'Lost'){\n\t\t\t\tawait Transaction.create({ \n\t\t\t\t\tAgent: agent._id,\n\t\t\t\t\tID: newBetOrder.ID,\n\t\t\t\t\ttype: 'BetOrder',\n\t\t\t\t\tdescription: `(${player.username}) Lost ${newBetOrder.title}`,\n\t\t\t\t\tamount: Number(newBetOrder.resultAmount),\n\t\t\t\t\tbalance: agent.credit.balance\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t} catch (e) {\n\t\tawait SystemLog.create({ title: 'update bet order result failed', content: `${e}`, status: 'danger'});\n\t}\n};\n\nexport default updateBetOrderResult;\n"]}