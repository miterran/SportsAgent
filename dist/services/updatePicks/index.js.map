{"version":3,"sources":["../../../src/services/updatePicks/index.js"],"names":["updatePickResult","console","log","find","isClosed","populate","path","select","then","compact","picks","map","pick","Event","isFinished","isEmpty","eventStatus","status","score","homeScore","home","awayScore","away","pickStatus","findOneAndUpdate","_id","Types","ObjectId","$set","updatedAt","new","newPick","Agent","notification","afterPick","agentNotify","Notification","sound","alert","Player","username","team","topic","APN_TOPIC","payload","BetOrder","send","deviceToken","playerNotify","shutdown","create","title","content"],"mappings":"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","file":"index.js","sourcesContent":["\nimport _ from 'lodash';\nimport moment from 'moment';\nimport Pick from '../../models/Pick';\nimport SystemLog from '../../models/SystemLog';\nimport mongoose from 'mongoose';\nimport determinePickResult from '../../utils/functions/determinePickResult';\nimport config from '../../config'\nimport apnProvider from '../../apn'\nimport apn from 'apn'\n\n\nconst updatePickResult = async () => {\n\t// eslint-disable-next-line\n\tconsole.log('update pick result')\n\ttry {\n\t\tconst picks = await Pick.find({ isClosed: false }, 'Event marked')\n\t\t\t.populate({ path: 'Event', select: 'isFinished sport score status' })\n\t\t\t.then(picks => _.compact(picks.map(pick => pick.Event.isFinished ? pick : null)) );\n\n \t\tif(_.isEmpty(picks)) return;\n\n\t\tfor( let pick of picks ){\n\t\t\tlet { Event: { status: eventStatus, score: { home: homeScore, away: awayScore } }} = pick;\n\t\t\tlet pickStatus = eventStatus;\n\t\t\tlet isClosed = true;\n\t\t\tif(eventStatus === 'Finished' && ( homeScore >= 0 && awayScore >= 0 )) {\n\t\t\t\tpickStatus = determinePickResult(pick);\n\t\t\t}\n\t\t\tif(eventStatus === 'Review'){\n\t\t\t\tisClosed = false;\n\t\t\t}\n\n\t\t\tconst newPick = await Pick.findOneAndUpdate({ \n\t\t\t\t_id: mongoose.Types.ObjectId(pick._id), status: 'Pending', isClosed: false \n\t\t\t}, {\n\t\t\t\t$set: { isClosed: isClosed, status: pickStatus, updatedAt: moment() } \n\t\t\t}, {\n\t\t\t\tnew: true \n\t\t\t}).populate('Event').populate('Agent').populate('Player');\n\n\t\t\tif(!isClosed) continue\n\n\t\t\tif(newPick.Agent.notification.afterPick){\n\t\t\t\tconst agentNotify = new apn.Notification({\n\t\t\t\t\tsound: 'ping.aiff',\n\t\t\t\t\talert: `${newPick.Player.username}'s Pick had ${newPick.status}, ${newPick.Event.team.away} vs ${newPick.Event.team.home}`,\n\t\t\t\t\ttopic: config.APN_TOPIC,\n\t\t\t\t\tpayload: { BetOrder: newPick.BetOrder }\n\t\t\t\t})\n\t\t\t\tawait apnProvider.send(agentNotify, newPick.Agent.notification.deviceToken)\n\t\t\t}\n\n\t\t\tif(newPick.Player.notification.afterPick){\n\t\t\t\tconst playerNotify = new apn.Notification({\n\t\t\t\t\tsound: 'ping.aiff',\n\t\t\t\t\talert: `Your Pick had ${newPick.status}, ${newPick.Event.team.away} vs ${newPick.Event.team.home}`,\n\t\t\t\t\ttopic: config.APN_TOPIC,\n\t\t\t\t\tpayload: { BetOrder: newPick.BetOrder }\n\t\t\t\t})\n\t\t\t\tawait apnProvider.send(playerNotify, newPick.Player.notification.deviceToken)\n\t\t\t}\n\n\n\t\t\tapnProvider.shutdown();\n\n\t\t}\n\t\t\n\t} catch (e) {\n\t\tawait SystemLog.create({ title: 'update picks result failed', content: `${e}`, status: 'danger'});\n\t}\n};\nexport default updatePickResult;\n"]}