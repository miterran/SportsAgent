{"version":3,"sources":["../../../../src/graphql/resolvers/Sign/index.js"],"names":["transporter","createTransport","host","port","secure","auth","user","GMAIL","pass","GPASSWORD","forgotPasswordSchema","object","shape","email","string","required","passcode","matches","min","max","agentRegisterSchema","username","password","playerRegisterSchema","playerUsername","playerNickname","playerPassword","playerPasscode","initial","number","integer","minRisk","positive","maxWin","parlay","boolean","basicTeaser","specialTeaser","bigTeaser","superTeaser","winReverse","actionReverse","parlayTeam","basicTeaserTeam","specialTeaserTeam","bigTeaserTeam","winReverseTeam","actionReverseTeam","Query","Mutation","agentRegister","root","req","isValid","isReqValid","validate","catch","err","message","title","content","status","findOne","RegExp","isUserExisted","isEmailExisted","agent","weekNum","isoWeek","credit","balance","Players","deletedPlayers","save","newAgent","item","newAgentBonus","create","Agent","_id","ID","process","type","description","amount","sign","pick","jwtSecret","login","token","role","playerRegister","ctx","Types","ObjectId","player","portrait","nickname","isActivate","isDeleted","Number","wagerLimit","newPlayer","findOneAndUpdate","$push","$inc","$set","new","agentUpdated","newPriceCost","forgotPassword","console","log","tempPassword","substring","mailOptions","from","to","subject","text","sendMail"],"mappings":"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","file":"index.js","sourcesContent":["import jwt from 'jsonwebtoken';\nimport mongoose from 'mongoose';\nimport yup from 'yup';\nimport config from '../../../config';\nimport User from '../../../models/User';\nimport Agent from '../../../models/User.Agent';\nimport Player from '../../../models/User.Player';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport Transaction from '../../../models/Transaction';\nimport SystemLog from '../../../models/SystemLog';\nimport uniqid from 'uniqid';\nimport PriceRate from '../../../models/PriceRate';\nimport nodemailer from 'nodemailer';\n\nconst transporter = nodemailer.createTransport({\n\thost: 'smtp.gmail.com',\n\tport: 465,\n\tsecure: true,\n    auth: {\n        user: config.GMAIL, // generated ethereal user\n        pass: config.GPASSWORD // generated ethereal password\n    }\n});\n\nconst forgotPasswordSchema = yup.object().shape({\n\temail: yup.string().email().required(),\n\tpasscode: yup.string().matches(/^[0-9]+$/, 'Passcode format is invalid.').min(4).max(4).required()\n});\n\nconst agentRegisterSchema = yup.object().shape({\n\tusername: yup.string().matches(/^\\w+$/, 'Username format is invalid.').min(4).max(10).required(),\n\temail: yup.string().email().required(),\n\tpassword: yup.string().min(4).max(12).required(),\n\tpasscode: yup.string().matches(/^[0-9]+$/, 'Passcode format is invalid.').min(4).max(4).required()\n});\n\nconst playerRegisterSchema = yup.object().shape({\n\tplayerUsername: yup.string().matches(/^\\w+$/, 'Username format is invalid.').min(4 | null, 'Username at least 4 characters.').max(10).required('Username required'),\n\tplayerNickname: yup.string().matches(/^\\w+$/, 'Nickname format is invalid.').max(10).required('Nickname required'),\n\tplayerPassword: yup.string().min(4 | null, 'Password at least 4 characters.').max(12).required('Password required'),\n\tplayerPasscode: yup.string().matches(/^[0-9]+$/, 'Passcode format is invalid.').min(4 | null, 'Passcode requires 4 digits.').max(4).required('Passcode required'),\n\tinitial: yup.number().integer().min(0).max(999999).required(),\n\tminRisk: yup.number().integer().positive().min(10 | null, 'Minimun Risk must greater then 10.').max(999999).required(),\n\tmaxWin: yup.number().integer().min(0).max(999999).required(),\n\tparlay: yup.boolean(),\n\tbasicTeaser: yup.boolean(),\n\tspecialTeaser: yup.boolean(),\n\tbigTeaser: yup.boolean(),\n\tsuperTeaser: yup.boolean(),\n\twinReverse: yup.boolean(),\n\tactionReverse: yup.boolean(),\n\tparlayTeam: yup.number().integer().positive().min(2).max(8).required(),\n\tbasicTeaserTeam: yup.number().integer().positive().min(2).max(8).required(),\n\tspecialTeaserTeam: yup.number().integer().positive().min(2).max(8).required(),\n\tbigTeaserTeam: yup.number().integer().positive().min(2).max(8).required(),\n\twinReverseTeam: yup.number().integer().positive().min(2).max(4).required(),\n\tactionReverseTeam: yup.number().integer().positive().min(2).max(4).required(),\n\tpasscode: yup.string().matches(/^[0-9]+$/, 'Passcode format is invalid.').min(4).max(4).required()\n});\n\nexport const Query = {\n\n};\n\nexport const Mutation = {\n\tasync agentRegister(root, req) {\n\t\ttry {\n\t\t\tconst isReqValid = await agentRegisterSchema.isValid(req);\n\t\t\tif(!isReqValid) return { title: 'Please try again.', content: await agentRegisterSchema.validate(req).catch(err => err.message), status: 'warning' };\n\t\t\tconst isUserExisted = await User.findOne({ username: new RegExp('\\\\b' + req.username + '\\\\b', 'i') });\n\t\t\tif(isUserExisted) return { title: req.username, content: 'Username has already been taken.', status: 'warning' };\n\t\t\tconst isEmailExisted = await User.findOne({ email: new RegExp('\\\\b' + req.email + '\\\\b', 'i') });\n\t\t\tif(isEmailExisted) return { title: req.email, content: 'Email has already been taken.', status: 'warning' };\n\n\t\t\tconst agent = new Agent({\n\t\t\t\tusername: req.username,\n\t\t\t\temail: req.email,\n\t\t\t\tpassword: req.password,\n\t\t\t\tpasscode: req.passcode,\n\t\t\t\tweekNum: moment().isoWeek(),\n\t\t\t\tcredit: { \n\t\t\t\t\tbalance: 750\n\t\t\t\t},\n\t\t\t\tPlayers: [],\n\t\t\t\tdeletedPlayers: [],\n\t\t\t});\n\t\t\tconst newAgent = await agent.save();\n\n\t\t\tconst newAgentBonus = await PriceRate.findOne({ item: 'NewAgentBonus' })\n\n\t\t\tawait Transaction.create({ \n\t\t\t\tAgent: newAgent._id,\n\t\t\t\tID: uniqid.process(),\n\t\t\t\ttype: 'Bonus',\n\t\t\t\tdescription: 'New Agent Bonus',\n\t\t\t\tamount: newAgentBonus.credit,\n\t\t\t\tbalance: newAgent.credit.balance\n\t\t\t});\n\t\t\tawait SystemLog.create({ title: 'New Agent Created', content: req.username, status: 'success' });\n\t\t\tawait SystemLog.create({ title: 'New Agent Bonus ' + newAgentBonus.credit, content: req.username, status: 'success' });\n\t\t\treturn { title: 'Created New Agent', content: jwt.sign(_.pick(newAgent, ['_id', 'role', 'username']), config.jwtSecret), status: 'success' };\n\t\t} catch(e) {\n\t\t\tawait SystemLog.create({ title: 'New Agent Failed', content: `${req.username} ${e}`, status: 'danger' });\n\t\t\treturn { title: 'Unknow Error', content: 'Please try again later!', status: 'danger' };\n\t\t}\n\t},\n\n\tasync login(root, req) {\n\t\ttry {\n\t\t\tconst user = await User.findOne({ username: new RegExp('\\\\b' + req.username + '\\\\b', 'i'), password: req.password }, '_id username password role');\n\t\t\tif(!user) return { title: 'Login Failed', content: 'Username or Password is incorrect', status: 'warning' };\n\t\t\tconst token = jwt.sign(_.pick(user, ['_id', 'role', 'username']), config.jwtSecret);\n\t\t\treturn { title: `${user.role}Navigator`, content: token, status: 'success' };\n\t\t} catch(e) {\n\t\t\treturn { title: 'Unknow Error', content: 'Please try again later!', status: 'danger' };\n\t\t}\n\t},\n\n\tasync playerRegister(root, req, ctx) {\n\t\ttry {\n\t\t\tif(ctx.user.role !== 'Agent') return { title: 'Not Authenticated', content: 'Please try again.', status: 'danger' };\n\t\t\tconst agent = await Agent.findOne({ _id: mongoose.Types.ObjectId(ctx.user._id), passcode: req.passcode });\n\t\t\tif(!agent) return { title: 'Passcode Not Match', content: 'Please try again.', status: 'warning' };\n\t\t\tconst isReqValid = await playerRegisterSchema.isValid(req);\n\t\t\tif(!isReqValid) return { title: 'Please try again.', content: await playerRegisterSchema.validate(req).catch(err => err.message), status: 'warning' };\n\t\t\tconst isUserExisted = await User.findOne({ username: new RegExp('\\\\b' + req.playerUsername + '\\\\b', 'i') }, '_id');\n\n\t\t\tif(isUserExisted) return { title: req.playerUsername, content: 'Username has already been taken.', status: 'warning' };\n\n\t\t\tconst player = new Player({\n\t\t\t\tportrait: '/',\n\t\t\t\tusername: req.playerUsername,\n\t\t\t\tnickname: req.playerNickname,\n\t\t\t\tpassword: req.playerPassword,\n\t\t\t\tpasscode: req.playerPasscode,\n\t\t\t\tAgent: ctx.user._id,\n\t\t\t\tweekNum: moment().isoWeek(),\n\t\t\t\tisActivate: true,\n\t\t\t\tisDeleted: false,\n\t\t\t\tcredit: {\n\t\t\t\t\tinitial: Number(req.initial),\n\t\t\t\t},\n\t\t\t\twagerLimit: {\n\t\t\t\t\tparlay: req.parlay,\n\t\t\t\t\tbasicTeaser: req.basicTeaser,\n\t\t\t\t\tspecialTeaser: req.specialTeaser,\n\t\t\t\t\tbigTeaser: req.bigTeaser,\n\t\t\t\t\tsuperTeaser: req.superTeaser,\n\t\t\t\t\tactionReverse: req.actionReverse,\n\t\t\t\t\twinReverse: req.winReverse,\n\t\t\t\t\tmaxWin: Number(req.maxWin),\n\t\t\t\t\tminRisk: Number(req.minRisk),\n\t\t\t\t\tparlayTeam: req.parlayTeam,\n\t\t\t\t\tbasicTeaserTeam: req.basicTeaserTeam,\n\t\t\t\t\tspecialTeaserTeam: req.specialTeaserTeam,\n\t\t\t\t\tbigTeaserTeam: req.bigTeaserTeam,\n\t\t\t\t\tactionReverseTeam: req.actionReverseTeam,\n\t\t\t\t\twinReverseTeam: req.winReverseTeam,\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst newPlayer = await player.save();\n\n\t\t\tconst agentUpdated = await Agent.findOneAndUpdate({ \n\t\t\t\t_id: mongoose.Types.ObjectId(ctx.user._id) \n\t\t\t}, { \n\t\t\t\t$push: { Players: newPlayer._id }, \n\t\t\t\t$inc: { 'credit.balance': -100 }, \n\t\t\t\t$set: { 'credit.updatedAt': moment() } \n\t\t\t}, { new: true });\n\n\t\t\tconst newPriceCost = await PriceRate.findOne({ item: 'NewPlayerCost' })\n\n\n\t\t\tawait Transaction.create({\n\t\t\t\tAgent: ctx.user._id,\n\t\t\t\tID: uniqid.process(),\n\t\t\t\ttype: 'CreatePlayer',\n\t\t\t\tdescription: `New Player ${newPlayer.username} (${newPlayer.nickname})`,\n\t\t\t\tamount: newPriceCost.credit,\n\t\t\t\tbalance: agentUpdated.credit.balance\n\t\t\t});\n\n\t\t\tawait SystemLog.create({ title: 'New Player Created', content: `${agentUpdated.username} created a new player ${newPlayer.username} (${newPlayer.nickname})`, status: 'success'});\n\t\t\treturn { title: 'New Player', content: newPlayer.username, status: 'success' };\n\t\t} catch(e) {\n\t\t\tawait SystemLog.create({ title: 'New Player Create Failed', content: `${ctx.user.username} create player ${req.playerUsername} failed ${e}`, status: 'danger'});\n\t\t\treturn { title: 'Unknow Error', content: 'Please try again later!', status: 'danger' };\n\t\t}\n\n\t},\n\tasync forgotPassword(root, req){\n\t\ttry {\n\t\t\tconsole.log(req)\n\t\t\tconst isReqValid = await forgotPasswordSchema.isValid(req);\n\t\t\tif(!isReqValid) return { title: 'Please try again.', content: await forgotPasswordSchema.validate(req).catch(err => err.message), status: 'warning' };\n\t\t\tconst tempPassword = uniqid.process().substring(0, 6);\n\t\t\tconst agent = await Agent.findOneAndUpdate({ email: req.email, passcode: req.passcode }, { $set: { password: tempPassword }});\n\t\t\tif(!agent) return { title: 'Please try again.', content: 'Email or Passcode is incorrect', status: 'danger' };\n\n\t\t\tconst mailOptions = {\n\t\t\t    from: config.GMAIL, // sender address\n\t\t\t    to: agent.email, // list of receivers\n\t\t\t    subject: 'SPORTS AGENT APP PASSWORD RESET', // Subject line\n\t\t\t    text: `Sports Agent App \\n username: ${agent.username} \\n temporary password: ${tempPassword} \\n Please reset after login.`, // plain text body\n\t\t\t};\n\n\t\t\tawait transporter.sendMail(mailOptions);\n\t\t\treturn { title: 'SUCCESS', content: `temporary password has been sent to ${agent.email}`, status: 'success' };\n\n\n\t\t} catch(e) {\n\t\t\tawait SystemLog.create({ title: 'Agent Reset Password Error', content: `${req.email} ${req.passcode} failed ${e}`, status: 'danger'});\n\t\t\treturn { title: 'Unknow Error', content: 'Please try again later!', status: 'danger' };\n\t\t}\n\n\t}\n};"]}