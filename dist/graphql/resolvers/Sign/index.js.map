{"version":3,"sources":["../../../../src/graphql/resolvers/Sign/index.js"],"names":["transporter","createTransport","host","port","secure","auth","user","GMAIL","pass","GPASSWORD","forgotPasswordSchema","object","shape","email","string","required","passcode","matches","min","max","agentRegisterSchema","username","password","deviceToken","playerRegisterSchema","playerUsername","playerNickname","playerPassword","playerPasscode","initial","number","integer","minRisk","positive","maxWin","parlay","boolean","basicTeaser","specialTeaser","bigTeaser","superTeaser","winReverse","actionReverse","parlayTeam","basicTeaserTeam","specialTeaserTeam","bigTeaserTeam","winReverseTeam","actionReverseTeam","Query","Mutation","agentRegister","root","req","isValid","isReqValid","validate","catch","err","message","title","content","status","findOne","RegExp","isUserExisted","isEmailExisted","item","newAgentBonus","agent","weekNum","isoWeek","credit","balance","notification","Players","deletedPlayers","save","newAgent","console","log","create","Agent","_id","ID","process","type","description","amount","sign","pick","jwtSecret","login","$set","findOneAndUpdate","token","role","playerRegister","ctx","Types","ObjectId","player","portrait","nickname","isActivate","isDeleted","Number","wagerLimit","newPlayer","newPriceCost","$push","$inc","new","agentUpdated","forgotPassword","tempPassword","substring","mailOptions","from","to","subject","text","sendMail"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAMA,cAAc,qBAAWC,eAAX,CAA2B;AAC9CC,OAAM,gBADwC;AAE9CC,OAAM,GAFwC;AAG9CC,SAAQ,IAHsC;AAI3CC,OAAM;AACFC,QAAM,iBAAOC,KADX,EACkB;AACpBC,QAAM,iBAAOC,SAFX,CAEqB;AAFrB;AAJqC,CAA3B,CAApB;;AAUA,IAAMC,uBAAuB,cAAIC,MAAJ,GAAaC,KAAb,CAAmB;AAC/CC,QAAO,cAAIC,MAAJ,GAAaD,KAAb,GAAqBE,QAArB,EADwC;AAE/CC,WAAU,cAAIF,MAAJ,GAAaG,OAAb,CAAqB,UAArB,EAAiC,6BAAjC,EAAgEC,GAAhE,CAAoE,CAApE,EAAuEC,GAAvE,CAA2E,CAA3E,EAA8EJ,QAA9E;AAFqC,CAAnB,CAA7B;;AAKA,IAAMK,sBAAsB,cAAIT,MAAJ,GAAaC,KAAb,CAAmB;AAC9CS,WAAU,cAAIP,MAAJ,GAAaG,OAAb,CAAqB,OAArB,EAA8B,6BAA9B,EAA6DC,GAA7D,CAAiE,CAAjE,EAAoEC,GAApE,CAAwE,EAAxE,EAA4EJ,QAA5E,EADoC;AAE9CF,QAAO,cAAIC,MAAJ,GAAaD,KAAb,GAAqBE,QAArB,EAFuC;AAG9CO,WAAU,cAAIR,MAAJ,GAAaI,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,EAAxB,EAA4BJ,QAA5B,EAHoC;AAI9CC,WAAU,cAAIF,MAAJ,GAAaG,OAAb,CAAqB,UAArB,EAAiC,6BAAjC,EAAgEC,GAAhE,CAAoE,CAApE,EAAuEC,GAAvE,CAA2E,CAA3E,EAA8EJ,QAA9E,EAJoC;AAK9CQ,cAAa,cAAIT,MAAJ;AALiC,CAAnB,CAA5B;;AAQA,IAAMU,uBAAuB,cAAIb,MAAJ,GAAaC,KAAb,CAAmB;AAC/Ca,iBAAgB,cAAIX,MAAJ,GAAaG,OAAb,CAAqB,OAArB,EAA8B,6BAA9B,EAA6DC,GAA7D,CAAiE,IAAI,IAArE,EAA2E,iCAA3E,EAA8GC,GAA9G,CAAkH,EAAlH,EAAsHJ,QAAtH,CAA+H,mBAA/H,CAD+B;AAE/CW,iBAAgB,cAAIZ,MAAJ,GAAaG,OAAb,CAAqB,OAArB,EAA8B,6BAA9B,EAA6DE,GAA7D,CAAiE,EAAjE,EAAqEJ,QAArE,CAA8E,mBAA9E,CAF+B;AAG/CY,iBAAgB,cAAIb,MAAJ,GAAaI,GAAb,CAAiB,IAAI,IAArB,EAA2B,iCAA3B,EAA8DC,GAA9D,CAAkE,EAAlE,EAAsEJ,QAAtE,CAA+E,mBAA/E,CAH+B;AAI/Ca,iBAAgB,cAAId,MAAJ,GAAaG,OAAb,CAAqB,UAArB,EAAiC,6BAAjC,EAAgEC,GAAhE,CAAoE,IAAI,IAAxE,EAA8E,6BAA9E,EAA6GC,GAA7G,CAAiH,CAAjH,EAAoHJ,QAApH,CAA6H,mBAA7H,CAJ+B;AAK/Cc,UAAS,cAAIC,MAAJ,GAAaC,OAAb,GAAuBb,GAAvB,CAA2B,CAA3B,EAA8BC,GAA9B,CAAkC,MAAlC,EAA0CJ,QAA1C,EALsC;AAM/CiB,UAAS,cAAIF,MAAJ,GAAaC,OAAb,GAAuBE,QAAvB,GAAkCf,GAAlC,CAAsC,KAAK,IAA3C,EAAiD,oCAAjD,EAAuFC,GAAvF,CAA2F,MAA3F,EAAmGJ,QAAnG,EANsC;AAO/CmB,SAAQ,cAAIJ,MAAJ,GAAaC,OAAb,GAAuBb,GAAvB,CAA2B,CAA3B,EAA8BC,GAA9B,CAAkC,MAAlC,EAA0CJ,QAA1C,EAPuC;AAQ/CoB,SAAQ,cAAIC,OAAJ,EARuC;AAS/CC,cAAa,cAAID,OAAJ,EATkC;AAU/CE,gBAAe,cAAIF,OAAJ,EAVgC;AAW/CG,YAAW,cAAIH,OAAJ,EAXoC;AAY/CI,cAAa,cAAIJ,OAAJ,EAZkC;AAa/CK,aAAY,cAAIL,OAAJ,EAbmC;AAc/CM,gBAAe,cAAIN,OAAJ,EAdgC;AAe/CO,aAAY,cAAIb,MAAJ,GAAaC,OAAb,GAAuBE,QAAvB,GAAkCf,GAAlC,CAAsC,CAAtC,EAAyCC,GAAzC,CAA6C,CAA7C,EAAgDJ,QAAhD,EAfmC;AAgB/C6B,kBAAiB,cAAId,MAAJ,GAAaC,OAAb,GAAuBE,QAAvB,GAAkCf,GAAlC,CAAsC,CAAtC,EAAyCC,GAAzC,CAA6C,CAA7C,EAAgDJ,QAAhD,EAhB8B;AAiB/C8B,oBAAmB,cAAIf,MAAJ,GAAaC,OAAb,GAAuBE,QAAvB,GAAkCf,GAAlC,CAAsC,CAAtC,EAAyCC,GAAzC,CAA6C,CAA7C,EAAgDJ,QAAhD,EAjB4B;AAkB/C+B,gBAAe,cAAIhB,MAAJ,GAAaC,OAAb,GAAuBE,QAAvB,GAAkCf,GAAlC,CAAsC,CAAtC,EAAyCC,GAAzC,CAA6C,CAA7C,EAAgDJ,QAAhD,EAlBgC;AAmB/CgC,iBAAgB,cAAIjB,MAAJ,GAAaC,OAAb,GAAuBE,QAAvB,GAAkCf,GAAlC,CAAsC,CAAtC,EAAyCC,GAAzC,CAA6C,CAA7C,EAAgDJ,QAAhD,EAnB+B;AAoB/CiC,oBAAmB,cAAIlB,MAAJ,GAAaC,OAAb,GAAuBE,QAAvB,GAAkCf,GAAlC,CAAsC,CAAtC,EAAyCC,GAAzC,CAA6C,CAA7C,EAAgDJ,QAAhD,EApB4B;AAqB/CC,WAAU,cAAIF,MAAJ,GAAaG,OAAb,CAAqB,UAArB,EAAiC,6BAAjC,EAAgEC,GAAhE,CAAoE,CAApE,EAAuEC,GAAvE,CAA2E,CAA3E,EAA8EJ,QAA9E;AArBqC,CAAnB,CAA7B;;AAwBO,IAAMkC,wBAAQ,EAAd;;AAIA,IAAMC,8BAAW;AACjBC,cADiB,yBACHC,IADG,EACGC,GADH,EACQ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEJjC,oBAAoBkC,OAApB,CAA4BD,GAA5B,CAFI;;AAAA;AAEvBE,iBAFuB;;AAAA,WAGzBA,UAHyB;AAAA;AAAA;AAAA;;AAAA;AAAA,cAGuCnC,oBAAoBoC,QAApB,CAA6BH,GAA7B,EAAkCI,KAAlC,CAAwC;AAAA,eAAOC,IAAIC,OAAX;AAAA,QAAxC,CAHvC;;AAAA;AAAA;AAAA;AAGJC,aAHI,EAGG,mBAHH;AAGwBC,eAHxB;AAGoGC,cAHpG,EAG4G;AAH5G;;AAAA;AAAA;AAAA,cAID,eAAKC,OAAL,CAAa,EAAE1C,UAAU,IAAI2C,MAAJ,CAAW,QAAQX,IAAIhC,QAAZ,GAAuB,KAAlC,EAAyC,GAAzC,CAAZ,EAAb,CAJC;;AAAA;AAIvB4C,oBAJuB;;AAAA,YAK1BA,aAL0B;AAAA;AAAA;AAAA;;AAAA,wCAKJ,EAAEL,OAAOP,IAAIhC,QAAb,EAAuBwC,SAAS,kCAAhC,EAAoEC,QAAQ,SAA5E,EALI;;AAAA;AAAA;AAAA,cAMA,eAAKC,OAAL,CAAa,EAAElD,OAAO,IAAImD,MAAJ,CAAW,QAAQX,IAAIxC,KAAZ,GAAoB,KAA/B,EAAsC,GAAtC,CAAT,EAAb,CANA;;AAAA;AAMvBqD,qBANuB;;AAAA,YAO1BA,cAP0B;AAAA;AAAA;AAAA;;AAAA,wCAOH,EAAEN,OAAOP,IAAIxC,KAAb,EAAoBgD,SAAS,+BAA7B,EAA8DC,QAAQ,SAAtE,EAPG;;AAAA;AAAA;AAAA,cASD,oBAAUC,OAAV,CAAkB,EAAEI,MAAM,eAAR,EAAlB,CATC;;AAAA;AASvBC,oBATuB;AAWvBC,YAXuB,GAWf,mBAAU;AACvBhD,kBAAUgC,IAAIhC,QADS;AAEvBR,eAAOwC,IAAIxC,KAFY;AAGvBS,kBAAU+B,IAAI/B,QAHS;AAIvBN,kBAAUqC,IAAIrC,QAJS;AAKvBsD,iBAAS,wBAASC,OAAT,EALc;AAMvBC,gBAAQ;AACPC,kBAASL,cAAcI;AADhB,SANe;AASvBE,sBAAc;AACbnD,sBAAa8B,IAAI9B;AADJ,SATS;AAYvBoD,iBAAS,EAZc;AAavBC,wBAAgB;AAbO,QAAV,CAXe;AAAA;AAAA,cA0BNP,MAAMQ,IAAN,EA1BM;;AAAA;AA0BvBC,eA1BuB;;AA2B7BC,eAAQC,GAAR,CAAYF,SAASJ,YAArB;AA3B6B;AAAA,cA4BvB,sBAAYO,MAAZ,CAAmB;AACxBC,eAAOJ,SAASK,GADQ;AAExBC,YAAI,iBAAOC,OAAP,EAFoB;AAGxBC,cAAM,OAHkB;AAIxBC,qBAAa,iBAJW;AAKxBC,gBAAQpB,cAAcI,MALE;AAMxBC,iBAASK,SAASN,MAAT,CAAgBC;AAND,QAAnB,CA5BuB;;AAAA;AAAA;AAAA,cAoCvB,oBAAUQ,MAAV,CAAiB,EAAErB,OAAO,mBAAT,EAA8BC,SAASR,IAAIhC,QAA3C,EAAqDyC,QAAQ,SAA7D,EAAjB,CApCuB;;AAAA;AAAA;AAAA,cAqCvB,oBAAUmB,MAAV,CAAiB,EAAErB,OAAO,qBAAqBQ,cAAcI,MAA5C,EAAoDX,SAASR,IAAIhC,QAAjE,EAA2EyC,QAAQ,SAAnF,EAAjB,CArCuB;;AAAA;AAAA,wCAsCtB,EAAEF,OAAO,mBAAT,EAA8BC,SAAS,uBAAI4B,IAAJ,CAAS,iBAAEC,IAAF,CAAOZ,QAAP,EAAiB,CAAC,KAAD,EAAQ,MAAR,EAAgB,UAAhB,CAAjB,CAAT,EAAwD,iBAAOa,SAA/D,CAAvC,EAAkH7B,QAAQ,SAA1H,EAtCsB;;AAAA;AAAA;AAAA;AAAA;AAAA,cAwCvB,oBAAUmB,MAAV,CAAiB,EAAErB,OAAO,kBAAT,EAA6BC,SAAYR,IAAIhC,QAAhB,oBAA7B,EAA8DyC,QAAQ,QAAtE,EAAjB,CAxCuB;;AAAA;AAAA,wCAyCtB,EAAEF,OAAO,cAAT,EAAyBC,SAAS,yBAAlC,EAA6DC,QAAQ,QAArE,EAzCsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2C9B,EA5CsB;AA8CjB8B,MA9CiB,iBA8CXxC,IA9CW,EA8CLC,GA9CK,EA8CA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGf9B,kBAHe,GAGD8B,IAAI9B,WAAJ,GAAkB,EAAEsE,MAAM,EAAE,4BAA4BxC,IAAI9B,WAAlC,EAAR,EAAlB,GAA8E,IAH7E;AAAA;AAAA,cAKF,eAAKuE,gBAAL,CAAsB,EAAEzE,UAAU,IAAI2C,MAAJ,CAAW,QAAQX,IAAIhC,QAAZ,GAAuB,KAAlC,EAAyC,GAAzC,CAAZ,EAA2DC,UAAU+B,IAAI/B,QAAzE,EAAtB,EAA2GC,WAA3G,CALE;;AAAA;AAKfjB,WALe;;AAAA,WAOjBA,IAPiB;AAAA;AAAA;AAAA;;AAAA,yCAOJ,EAAEsD,OAAO,cAAT,EAAyBC,SAAS,mCAAlC,EAAuEC,QAAQ,SAA/E,EAPI;;AAAA;AASfiC,YATe,GASP,uBAAIN,IAAJ,CAAS,iBAAEC,IAAF,CAAOpF,IAAP,EAAa,CAAC,KAAD,EAAQ,MAAR,EAAgB,UAAhB,CAAb,CAAT,EAAoD,iBAAOqF,SAA3D,CATO;AAAA,yCAUd,EAAE/B,OAAUtD,KAAK0F,IAAf,cAAF,EAAkCnC,SAASkC,KAA3C,EAAkDjC,QAAQ,SAA1D,EAVc;;AAAA;AAAA;AAAA;AAAA,yCAYd,EAAEF,OAAO,cAAT,EAAyBC,SAAS,yBAAlC,EAA6DC,QAAQ,QAArE,EAZc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AActB,EA5DsB;AA8DjBmC,eA9DiB,0BA8DF7C,IA9DE,EA8DIC,GA9DJ,EA8DS6C,GA9DT,EA8Dc;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,aAEhCA,IAAI5F,IAAJ,CAAS0F,IAAT,KAAkB,OAFc;AAAA;AAAA;AAAA;;AAAA,yCAEE,EAAEpC,OAAO,mBAAT,EAA8BC,SAAS,mBAAvC,EAA4DC,QAAQ,QAApE,EAFF;;AAAA;AAAA;AAAA,cAGf,eAAMC,OAAN,CAAc,EAAEoB,KAAK,mBAASgB,KAAT,CAAeC,QAAf,CAAwBF,IAAI5F,IAAJ,CAAS6E,GAAjC,CAAP,EAA8CnE,UAAUqC,IAAIrC,QAA5D,EAAd,CAHe;;AAAA;AAG7BqD,YAH6B;;AAAA,WAI/BA,KAJ+B;AAAA;AAAA;AAAA;;AAAA,yCAIjB,EAAET,OAAO,oBAAT,EAA+BC,SAAS,mBAAxC,EAA6DC,QAAQ,SAArE,EAJiB;;AAAA;AAAA;AAAA,cAKVtC,qBAAqB8B,OAArB,CAA6BD,GAA7B,CALU;;AAAA;AAK7BE,iBAL6B;;AAAA,WAM/BA,UAN+B;AAAA;AAAA;AAAA;;AAAA;AAAA,cAMiC/B,qBAAqBgC,QAArB,CAA8BH,GAA9B,EAAmCI,KAAnC,CAAyC;AAAA,eAAOC,IAAIC,OAAX;AAAA,QAAzC,CANjC;;AAAA;AAAA;AAAA;AAMVC,aANU,EAMH,mBANG;AAMkBC,eANlB;AAM+FC,cAN/F,EAMuG;AANvG;;AAAA;AAAA;AAAA,cAOP,eAAKC,OAAL,CAAa,EAAE1C,UAAU,IAAI2C,MAAJ,CAAW,QAAQX,IAAI5B,cAAZ,GAA6B,KAAxC,EAA+C,GAA/C,CAAZ,EAAb,EAAgF,KAAhF,CAPO;;AAAA;AAO7BwC,oBAP6B;;AAAA,YAShCA,aATgC;AAAA;AAAA;AAAA;;AAAA,yCASV,EAAEL,OAAOP,IAAI5B,cAAb,EAA6BoC,SAAS,kCAAtC,EAA0EC,QAAQ,SAAlF,EATU;;AAAA;AAW7BuC,aAX6B,GAWpB,mBAAW;AACzBC,kBAAU,GADe;AAEzBjF,kBAAUgC,IAAI5B,cAFW;AAGzB8E,kBAAUlD,IAAI3B,cAHW;AAIzBJ,kBAAU+B,IAAI1B,cAJW;AAKzBX,kBAAUqC,IAAIzB,cALW;AAMzBsD,eAAOgB,IAAI5F,IAAJ,CAAS6E,GANS;AAOzBb,iBAAS,wBAASC,OAAT,EAPgB;AAQzBiC,oBAAY,IARa;AASzBC,mBAAW,KATc;AAUzBjC,gBAAQ;AACP3C,kBAAS6E,OAAOrD,IAAIxB,OAAX;AADF,SAViB;AAazB6C,sBAAc,EAbW;AAczBiC,oBAAY;AACXxE,iBAAQkB,IAAIlB,MADD;AAEXE,sBAAagB,IAAIhB,WAFN;AAGXC,wBAAee,IAAIf,aAHR;AAIXC,oBAAWc,IAAId,SAJJ;AAKXC,sBAAaa,IAAIb,WALN;AAMXE,wBAAeW,IAAIX,aANR;AAOXD,qBAAYY,IAAIZ,UAPL;AAQXP,iBAAQwE,OAAOrD,IAAInB,MAAX,CARG;AASXF,kBAAS0E,OAAOrD,IAAIrB,OAAX,CATE;AAUXW,qBAAYU,IAAIV,UAVL;AAWXC,0BAAiBS,IAAIT,eAXV;AAYXC,4BAAmBQ,IAAIR,iBAZZ;AAaXC,wBAAeO,IAAIP,aAbR;AAcXE,4BAAmBK,IAAIL,iBAdZ;AAeXD,yBAAgBM,IAAIN;AAfT;AAda,QAAX,CAXoB;AAAA;AAAA,cA4CXsD,OAAOxB,IAAP,EA5CW;;AAAA;AA4C7B+B,gBA5C6B;AAAA;AAAA,cA8CR,oBAAU7C,OAAV,CAAkB,EAAEI,MAAM,eAAR,EAAlB,CA9CQ;;AAAA;AA8C7B0C,mBA9C6B;AAAA;AAAA,cAgDR,eAAMf,gBAAN,CAAuB;AACjDX,aAAK,mBAASgB,KAAT,CAAeC,QAAf,CAAwBF,IAAI5F,IAAJ,CAAS6E,GAAjC;AAD4C,QAAvB,EAExB;AACF2B,eAAO,EAAEnC,SAASiC,UAAUzB,GAArB,EADL;AAEF4B,cAAM,EAAE,kBAAkBF,aAAarC,MAAjC,EAFJ;AAGFqB,cAAM,EAAE,oBAAoB,uBAAtB;AAHJ,QAFwB,EAMxB,EAAEmB,KAAK,IAAP,EANwB,CAhDQ;;AAAA;AAgD7BC,mBAhD6B;AAAA;AAAA,cAwD7B,sBAAYhC,MAAZ,CAAmB;AACxBC,eAAOgB,IAAI5F,IAAJ,CAAS6E,GADQ;AAExBC,YAAI,iBAAOC,OAAP,EAFoB;AAGxBC,cAAM,cAHkB;AAIxBC,qCAA2BqB,UAAUvF,QAArC,UAAkDuF,UAAUL,QAA5D,MAJwB;AAKxBf,gBAAQqB,aAAarC,MALG;AAMxBC,iBAASwC,aAAazC,MAAb,CAAoBC;AANL,QAAnB,CAxD6B;;AAAA;AAAA;AAAA,cAiE7B,oBAAUQ,MAAV,CAAiB,EAAErB,OAAO,oBAAT,EAA+BC,SAAYoD,aAAa5F,QAAzB,8BAA0DuF,UAAUvF,QAApE,UAAiFuF,UAAUL,QAA3F,MAA/B,EAAuIzC,QAAQ,SAA/I,EAAjB,CAjE6B;;AAAA;AAAA,yCAkE5B,EAAEF,OAAO,YAAT,EAAuBC,SAAS+C,UAAUvF,QAA1C,EAAoDyC,QAAQ,SAA5D,EAlE4B;;AAAA;AAAA;AAAA;AAAA;AAAA,cAoE7B,oBAAUmB,MAAV,CAAiB,EAAErB,OAAO,0BAAT,EAAqCC,SAAYqC,IAAI5F,IAAJ,CAASe,QAArB,uBAA+CgC,IAAI5B,cAAnD,4BAArC,EAAsHqC,QAAQ,QAA9H,EAAjB,CApE6B;;AAAA;AAAA,yCAqE5B,EAAEF,OAAO,cAAT,EAAyBC,SAAS,yBAAlC,EAA6DC,QAAQ,QAArE,EArE4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwEpC,EAtIsB;AAuIjBoD,eAvIiB,0BAuIF9D,IAvIE,EAuIIC,GAvIJ,EAuIQ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEJ3C,qBAAqB4C,OAArB,CAA6BD,GAA7B,CAFI;;AAAA;AAEvBE,iBAFuB;;AAAA,WAGzBA,UAHyB;AAAA;AAAA;AAAA;;AAAA;AAAA,cAGuC7C,qBAAqB8C,QAArB,CAA8BH,GAA9B,EAAmCI,KAAnC,CAAyC;AAAA,eAAOC,IAAIC,OAAX;AAAA,QAAzC,CAHvC;;AAAA;AAAA;AAAA;AAGJC,aAHI,EAGG,mBAHH;AAGwBC,eAHxB;AAGqGC,cAHrG,EAG6G;AAH7G;;AAAA;AAIvBqD,mBAJuB,GAIR,iBAAO9B,OAAP,GAAiB+B,SAAjB,CAA2B,CAA3B,EAA8B,CAA9B,CAJQ;AAAA;AAAA,cAKT,eAAMtB,gBAAN,CAAuB,EAAEjF,OAAOwC,IAAIxC,KAAb,EAAoBG,UAAUqC,IAAIrC,QAAlC,EAAvB,EAAqE,EAAE6E,MAAM,EAAEvE,UAAU6F,YAAZ,EAAR,EAArE,CALS;;AAAA;AAKvB9C,YALuB;;AAAA,WAMzBA,KANyB;AAAA;AAAA;AAAA;;AAAA,yCAMX,EAAET,OAAO,QAAT,EAAmBC,SAAS,6BAA5B,EAA2DC,QAAQ,QAAnE,EANW;;AAAA;AAQvBuD,kBARuB,GAQT;AAChBC,cAAM,iBAAO/G,KADG,EACI;AACpBgH,YAAIlD,MAAMxD,KAFM,EAEC;AACjB2G,iBAAS,iCAHO,EAG4B;AAC5CC,iDAAuCpD,MAAMhD,QAA7C,gCAAgF8F,YAAhF,kDAJgB,CAI6H;AAJ7H,QARS;AAAA;AAAA,cAevBnH,YAAY0H,QAAZ,CAAqBL,WAArB,CAfuB;;AAAA;AAAA,yCAgBtB,EAAEzD,OAAO,SAAT,EAAoBC,SAASQ,MAAMxD,KAAnC,EAA0CiD,QAAQ,SAAlD,EAhBsB;;AAAA;AAAA;AAAA;AAAA;AAAA,cAoBvB,oBAAUmB,MAAV,CAAiB,EAAErB,OAAO,4BAAT,EAAuCC,SAAYR,IAAIxC,KAAhB,SAAyBwC,IAAIrC,QAA7B,4BAAvC,EAA4F8C,QAAQ,QAApG,EAAjB,CApBuB;;AAAA;AAAA,yCAqBtB,EAAEF,OAAO,cAAT,EAAyBC,SAAS,yBAAlC,EAA6DC,QAAQ,QAArE,EArBsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwB9B;AA/JsB,CAAjB","file":"index.js","sourcesContent":["import jwt from 'jsonwebtoken';\nimport mongoose from 'mongoose';\nimport yup from 'yup';\nimport config from '../../../config';\nimport User from '../../../models/User';\nimport Agent from '../../../models/User.Agent';\nimport Player from '../../../models/User.Player';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport Transaction from '../../../models/Transaction';\nimport SystemLog from '../../../models/SystemLog';\nimport uniqid from 'uniqid';\nimport PriceRate from '../../../models/PriceRate';\nimport nodemailer from 'nodemailer';\n\nconst transporter = nodemailer.createTransport({\n\thost: 'smtp.gmail.com',\n\tport: 465,\n\tsecure: true,\n    auth: {\n        user: config.GMAIL, // generated ethereal user\n        pass: config.GPASSWORD // generated ethereal password\n    }\n});\n\nconst forgotPasswordSchema = yup.object().shape({\n\temail: yup.string().email().required(),\n\tpasscode: yup.string().matches(/^[0-9]+$/, 'Passcode format is invalid.').min(4).max(4).required()\n});\n\nconst agentRegisterSchema = yup.object().shape({\n\tusername: yup.string().matches(/^\\w+$/, 'Username format is invalid.').min(4).max(10).required(),\n\temail: yup.string().email().required(),\n\tpassword: yup.string().min(4).max(12).required(),\n\tpasscode: yup.string().matches(/^[0-9]+$/, 'Passcode format is invalid.').min(4).max(4).required(),\n\tdeviceToken: yup.string()\n});\n\nconst playerRegisterSchema = yup.object().shape({\n\tplayerUsername: yup.string().matches(/^\\w+$/, 'Username format is invalid.').min(4 | null, 'Username at least 4 characters.').max(10).required('Username required'),\n\tplayerNickname: yup.string().matches(/^\\w+$/, 'Nickname format is invalid.').max(10).required('Nickname required'),\n\tplayerPassword: yup.string().min(4 | null, 'Password at least 4 characters.').max(12).required('Password required'),\n\tplayerPasscode: yup.string().matches(/^[0-9]+$/, 'Passcode format is invalid.').min(4 | null, 'Passcode requires 4 digits.').max(4).required('Passcode required'),\n\tinitial: yup.number().integer().min(0).max(999999).required(),\n\tminRisk: yup.number().integer().positive().min(10 | null, 'Minimun Risk must greater then 10.').max(999999).required(),\n\tmaxWin: yup.number().integer().min(0).max(999999).required(),\n\tparlay: yup.boolean(),\n\tbasicTeaser: yup.boolean(),\n\tspecialTeaser: yup.boolean(),\n\tbigTeaser: yup.boolean(),\n\tsuperTeaser: yup.boolean(),\n\twinReverse: yup.boolean(),\n\tactionReverse: yup.boolean(),\n\tparlayTeam: yup.number().integer().positive().min(2).max(8).required(),\n\tbasicTeaserTeam: yup.number().integer().positive().min(2).max(8).required(),\n\tspecialTeaserTeam: yup.number().integer().positive().min(2).max(8).required(),\n\tbigTeaserTeam: yup.number().integer().positive().min(2).max(8).required(),\n\twinReverseTeam: yup.number().integer().positive().min(2).max(4).required(),\n\tactionReverseTeam: yup.number().integer().positive().min(2).max(4).required(),\n\tpasscode: yup.string().matches(/^[0-9]+$/, 'Passcode format is invalid.').min(4).max(4).required()\n});\n\nexport const Query = {\n\n};\n\nexport const Mutation = {\n\tasync agentRegister(root, req) {\n\t\ttry {\n\t\t\tconst isReqValid = await agentRegisterSchema.isValid(req);\n\t\t\tif(!isReqValid) return { title: 'Please try again.', content: await agentRegisterSchema.validate(req).catch(err => err.message), status: 'warning' };\n\t\t\tconst isUserExisted = await User.findOne({ username: new RegExp('\\\\b' + req.username + '\\\\b', 'i') });\n\t\t\tif(isUserExisted) return { title: req.username, content: 'Username has already been taken.', status: 'warning' };\n\t\t\tconst isEmailExisted = await User.findOne({ email: new RegExp('\\\\b' + req.email + '\\\\b', 'i') });\n\t\t\tif(isEmailExisted) return { title: req.email, content: 'Email has already been taken.', status: 'warning' };\n\n\t\t\tconst newAgentBonus = await PriceRate.findOne({ item: 'NewAgentBonus' })\n\n\t\t\tconst agent = new Agent({\n\t\t\t\tusername: req.username,\n\t\t\t\temail: req.email,\n\t\t\t\tpassword: req.password,\n\t\t\t\tpasscode: req.passcode,\n\t\t\t\tweekNum: moment().isoWeek(),\n\t\t\t\tcredit: { \n\t\t\t\t\tbalance: newAgentBonus.credit\n\t\t\t\t},\n\t\t\t\tnotification: {\n\t\t\t\t\tdeviceToken: req.deviceToken\n\t\t\t\t},\n\t\t\t\tPlayers: [],\n\t\t\t\tdeletedPlayers: [],\n\t\t\t});\n\t\t\tconst newAgent = await agent.save();\n\t\t\tconsole.log(newAgent.notification)\n\t\t\tawait Transaction.create({ \n\t\t\t\tAgent: newAgent._id,\n\t\t\t\tID: uniqid.process(),\n\t\t\t\ttype: 'Bonus',\n\t\t\t\tdescription: 'New Agent Bonus',\n\t\t\t\tamount: newAgentBonus.credit,\n\t\t\t\tbalance: newAgent.credit.balance\n\t\t\t});\n\t\t\tawait SystemLog.create({ title: 'New Agent Created', content: req.username, status: 'success' });\n\t\t\tawait SystemLog.create({ title: 'New Agent Bonus ' + newAgentBonus.credit, content: req.username, status: 'success' });\n\t\t\treturn { title: 'Created New Agent', content: jwt.sign(_.pick(newAgent, ['_id', 'role', 'username']), config.jwtSecret), status: 'success' };\n\t\t} catch(e) {\n\t\t\tawait SystemLog.create({ title: 'New Agent Failed', content: `${req.username} ${e}`, status: 'danger' });\n\t\t\treturn { title: 'Unknow Error', content: 'Please try again later!', status: 'danger' };\n\t\t}\n\t},\n\n\tasync login(root, req) {\n\t\ttry {\n\n\t\t\tconst deviceToken = req.deviceToken ? { $set: { 'notification.deviceToken': req.deviceToken } } : null\n\n\t\t\tconst user = await User.findOneAndUpdate({ username: new RegExp('\\\\b' + req.username + '\\\\b', 'i'), password: req.password }, deviceToken);\n\n\t\t\tif(!user) return { title: 'Login Failed', content: 'Username or Password is incorrect', status: 'warning' };\n\n\t\t\tconst token = jwt.sign(_.pick(user, ['_id', 'role', 'username']), config.jwtSecret);\n\t\t\treturn { title: `${user.role}Navigator`, content: token, status: 'success' };\n\t\t} catch(e) {\n\t\t\treturn { title: 'Unknow Error', content: 'Please try again later!', status: 'danger' };\n\t\t}\n\t},\n\n\tasync playerRegister(root, req, ctx) {\n\t\ttry {\n\t\t\tif(ctx.user.role !== 'Agent') return { title: 'Not Authenticated', content: 'Please try again.', status: 'danger' };\n\t\t\tconst agent = await Agent.findOne({ _id: mongoose.Types.ObjectId(ctx.user._id), passcode: req.passcode });\n\t\t\tif(!agent) return { title: 'Passcode Not Match', content: 'Please try again.', status: 'warning' };\n\t\t\tconst isReqValid = await playerRegisterSchema.isValid(req);\n\t\t\tif(!isReqValid) return { title: 'Please try again.', content: await playerRegisterSchema.validate(req).catch(err => err.message), status: 'warning' };\n\t\t\tconst isUserExisted = await User.findOne({ username: new RegExp('\\\\b' + req.playerUsername + '\\\\b', 'i') }, '_id');\n\n\t\t\tif(isUserExisted) return { title: req.playerUsername, content: 'Username has already been taken.', status: 'warning' };\n\n\t\t\tconst player = new Player({\n\t\t\t\tportrait: '/',\n\t\t\t\tusername: req.playerUsername,\n\t\t\t\tnickname: req.playerNickname,\n\t\t\t\tpassword: req.playerPassword,\n\t\t\t\tpasscode: req.playerPasscode,\n\t\t\t\tAgent: ctx.user._id,\n\t\t\t\tweekNum: moment().isoWeek(),\n\t\t\t\tisActivate: true,\n\t\t\t\tisDeleted: false,\n\t\t\t\tcredit: {\n\t\t\t\t\tinitial: Number(req.initial),\n\t\t\t\t},\n\t\t\t\tnotification: {},\n\t\t\t\twagerLimit: {\n\t\t\t\t\tparlay: req.parlay,\n\t\t\t\t\tbasicTeaser: req.basicTeaser,\n\t\t\t\t\tspecialTeaser: req.specialTeaser,\n\t\t\t\t\tbigTeaser: req.bigTeaser,\n\t\t\t\t\tsuperTeaser: req.superTeaser,\n\t\t\t\t\tactionReverse: req.actionReverse,\n\t\t\t\t\twinReverse: req.winReverse,\n\t\t\t\t\tmaxWin: Number(req.maxWin),\n\t\t\t\t\tminRisk: Number(req.minRisk),\n\t\t\t\t\tparlayTeam: req.parlayTeam,\n\t\t\t\t\tbasicTeaserTeam: req.basicTeaserTeam,\n\t\t\t\t\tspecialTeaserTeam: req.specialTeaserTeam,\n\t\t\t\t\tbigTeaserTeam: req.bigTeaserTeam,\n\t\t\t\t\tactionReverseTeam: req.actionReverseTeam,\n\t\t\t\t\twinReverseTeam: req.winReverseTeam,\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst newPlayer = await player.save();\n\n\t\t\tconst newPriceCost = await PriceRate.findOne({ item: 'NewPlayerCost' })\n\n\t\t\tconst agentUpdated = await Agent.findOneAndUpdate({ \n\t\t\t\t_id: mongoose.Types.ObjectId(ctx.user._id) \n\t\t\t}, { \n\t\t\t\t$push: { Players: newPlayer._id }, \n\t\t\t\t$inc: { 'credit.balance': newPriceCost.credit }, \n\t\t\t\t$set: { 'credit.updatedAt': moment() } \n\t\t\t}, { new: true });\n\n\t\t\tawait Transaction.create({\n\t\t\t\tAgent: ctx.user._id,\n\t\t\t\tID: uniqid.process(),\n\t\t\t\ttype: 'CreatePlayer',\n\t\t\t\tdescription: `New Player ${newPlayer.username} (${newPlayer.nickname})`,\n\t\t\t\tamount: newPriceCost.credit,\n\t\t\t\tbalance: agentUpdated.credit.balance\n\t\t\t});\n\n\t\t\tawait SystemLog.create({ title: 'New Player Created', content: `${agentUpdated.username} created a new player ${newPlayer.username} (${newPlayer.nickname})`, status: 'success'});\n\t\t\treturn { title: 'New Player', content: newPlayer.username, status: 'success' };\n\t\t} catch(e) {\n\t\t\tawait SystemLog.create({ title: 'New Player Create Failed', content: `${ctx.user.username} create player ${req.playerUsername} failed ${e}`, status: 'danger'});\n\t\t\treturn { title: 'Unknow Error', content: 'Please try again later!', status: 'danger' };\n\t\t}\n\n\t},\n\tasync forgotPassword(root, req){\n\t\ttry {\n\t\t\tconst isReqValid = await forgotPasswordSchema.isValid(req);\n\t\t\tif(!isReqValid) return { title: 'Please try again.', content: await forgotPasswordSchema.validate(req).catch(err => err.message), status: 'warning' };\n\t\t\tconst tempPassword = uniqid.process().substring(0, 6);\n\t\t\tconst agent = await Agent.findOneAndUpdate({ email: req.email, passcode: req.passcode }, { $set: { password: tempPassword }});\n\t\t\tif(!agent) return { title: 'ERROR.', content: 'Email or Passcode incorrect', status: 'danger' };\n\n\t\t\tconst mailOptions = {\n\t\t\t    from: config.GMAIL, // sender address\n\t\t\t    to: agent.email, // list of receivers\n\t\t\t    subject: 'SPORTS AGENT APP PASSWORD RESET', // Subject line\n\t\t\t    text: `Sports Agent App \\n username: ${agent.username} \\n temporary password: ${tempPassword} \\n Please set up a new password after login.`, // plain text body\n\t\t\t};\n\n\t\t\tawait transporter.sendMail(mailOptions);\n\t\t\treturn { title: 'SUCCESS', content: agent.email, status: 'success' };\n\n\n\t\t} catch(e) {\n\t\t\tawait SystemLog.create({ title: 'Agent Reset Password Error', content: `${req.email} ${req.passcode} failed ${e}`, status: 'danger'});\n\t\t\treturn { title: 'Unknow Error', content: 'Please try again later!', status: 'danger' };\n\t\t}\n\n\t}\n};"]}