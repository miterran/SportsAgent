{"version":3,"sources":["../../../../src/graphql/resolvers/Action/index.js"],"names":["Query","table","root","req","findOne","name","action","sports","sort","a","b","indexOf","map","sport","leagues","league","periods","actionEvents","tablePicks","isEmpty","find","$or","cutOffAt","$gte","status","isFinished","then","compact","events","event","isActionOddActivate","wagerPicks","eventOddPicks","eventIDs","uniqBy","_id","Types","ObjectId","pick","Event","toString","ID","marked","oddLine","actionOdd","oddLineTarget","oddPoint","oddPointTarget","oddTarget","oddType","Mutation","createBetOrder","ctx","passcode","betType","betAmount","atRisk","toWin","picks","user","player","title","content","isActivate","recalAtRisk","recalToWin","Number","Agent","agent","credit","available","agentAvailableCredit","length","wagerLimit","maxWin","minRisk","pickIDs","Player","isClosed","populate","path","select","betOrders","betOrder","createdAt","Picks","Pick","existedOpenBets","existedOpenBet","isEqual","toUpperCase","format","uniqEventIDs","mongooseEventIDs","eventID","latestEvents","latestEvent","period","team","away","home","eventDetail","isOddExpired","latestOddPoint","latestOddLine","pickOddPoint","pickOddLine","oddUpdatedDetail","update","$set","isPicked","multi","newBetOrder","process","bet","type","amount","resultAmount","note","updatedAt","save","savedBetOrder","newPicks","BetOrder","created","insertMany","savedPickIDs","findOneAndUpdate","new","theBetOrder","$inc","item","actionFee","create","description","username","balance","notification","afterWager","agentNotify","Notification","sound","alert","topic","APN_TOPIC","payload","send","deviceToken","shutdown"],"mappings":"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","file":"index.js","sourcesContent":["import config from '../../../config'\nimport Table from '../../../models/Table';\nimport Event from '../../../models/Event';\nimport Agent from '../../../models/User.Agent';\nimport Player from '../../../models/User.Player';\nimport Pick from '../../../models/Pick';\nimport BetOrder from '../../../models/BetOrder';\nimport moment from 'moment';\nimport mongoose from 'mongoose';\nimport _ from 'lodash';\nimport uniqid from 'uniqid';\n\nimport generateAtRiskToWin from '../../../utils/functions/generateAtRiskToWin';\nimport renameActionToTable from '../../../utils/functions/renameActionToTable';\nimport renameActionFullName from '../../../utils/functions/renameActionFullName';\nimport sportTypes from '../../../utils/lists/sportTypes';\nimport periodTypes from '../../../utils/lists/periodTypes';\n\nimport minTeam from '../../../utils/collections/minTeam';\n\nimport updateEvents from '../../../queues/updateEvents';\nimport updateTables from '../../../queues/updateTables';\nimport SystemLog from '../../../models/SystemLog';\nimport Transaction from '../../../models/Transaction';\nimport PriceRate from '../../../models/PriceRate';\n\nimport apnProvider from '../../../apn'\nimport apn from 'apn'\n\nexport const Query = {\n\tasync table(root, req) {\n\t\t// await updateEvents()\n\t\tawait updateTables();\n\t\tlet table = await Table.findOne({ name: renameActionToTable(req.action) });\n\t\ttable.sports.sort((a, b) => sportTypes.indexOf(a.name) - sportTypes.indexOf(b.name));\n\t\ttable.sports.map(sport => sport.leagues.map(league => league.periods.sort((a, b) => periodTypes.indexOf(a.name) - periodTypes.indexOf(b.name))));\n\t\treturn table;\n\t},\n\tasync actionEvents(root, { action, tablePicks }) {\n\t\tif(_.isEmpty(tablePicks)) return [];\n\t\t//\t\tawait updateEvents()\n\t\treturn Event.find({ $or: tablePicks, cutOffAt: { $gte: moment() }, status: 'Pending', isFinished: false }).sort({ cutOffAt: 1 })\n\t\t\t.then(events => _.compact(events.map(event => { event.action = action; if(event.isActionOddActivate) { return event; } else { return null; } })));\n\t},\n\tasync wagerPicks(root, { action, eventOddPicks }) {\n\t\tif(_.isEmpty(eventOddPicks)) return [];\n\t\t//\t\tawait updateEvents()\n\t\tconst eventIDs = _.uniqBy(eventOddPicks.map(pick => ({ _id: mongoose.Types.ObjectId(pick.Event) })), '_id');\n\t\tconst events = await Event.find({ $or: eventIDs }).then(events => events.map(event => { event.action = action; return event; } ));\n\t\treturn eventOddPicks.map(pick => {\n\t\t\tlet event = _.find(events, event => event._id.toString() === pick.Event );\n\t\t\treturn {\n\t\t\t\tID: pick.ID,\n\t\t\t\tEvent: event,\n\t\t\t\tmarked: {\n\t\t\t\t\toddLine: event.actionOdd[pick.marked.oddLineTarget] || null,\n\t\t\t\t\toddPoint: event.actionOdd[pick.marked.oddPointTarget] || null,\n\t\t\t\t\toddTarget: pick.marked.oddTarget,\n\t\t\t\t\toddType: pick.marked.oddType,\n\t\t\t\t\toddLineTarget: pick.marked.oddLineTarget,\n\t\t\t\t\toddPointTarget: pick.marked.oddPointTarget,\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}\n};\n\nexport const Mutation = {\n\tasync createBetOrder(root, { action, passcode, betType, betAmount, atRisk, toWin, picks }, ctx) {\n\t\ttry {\n\t\t//validation\n\t\t\tconst player = await Player.findOne({ _id: mongoose.Types.ObjectId(ctx.user._id), passcode: passcode });\n\t\t\tif(!player) return { title: 'Passcode Not Match', content: 'Please try again.', status: 'warning' };\n\t\t\tif(!player.isActivate) return { title: 'Account Has Deactivated', content: 'Please contact Agent.', status: 'warning' };\n\n\n\t\t\tconst { atRisk: recalAtRisk, toWin: recalToWin } = generateAtRiskToWin( action, betType, betAmount, picks );\n\n\t\t\tif( atRisk !== Number(recalAtRisk) || toWin !== Number(recalToWin) ) return { title: 'Bet Amount Error', content: 'Please try again.', status: 'warning' };\n\n\t\t\tconst agentAvailableCredit = await Agent.findOne({ _id: mongoose.Types.ObjectId(player.Agent) }).then(agent => agent.credit.available);\n\n\t\t\tif( atRisk > agentAvailableCredit ) return { title: 'Agent Has Not Enough Credit', content: 'Please contact Agent.', status: 'warning' };\n\t\t\tif( atRisk > player.credit.available ) return { title: 'You Have Not Enough Credit', content: 'Please contact Agent.', status: 'warning' };\n\t\t\tif( picks.length > player.wagerLimit[action+'Team'] ) return { title: renameActionFullName(action) + ' Teams Over Wager Limit', content: 'Please try again.', status: 'warning' };\n\t\t\tif( picks.length < minTeam[action] ) return { title: renameActionFullName(action) + ' Teams Under ' + minTeam[action], content: 'Please try again.', status: 'warning' };\n\t\t\tif( toWin > player.wagerLimit.maxWin ) return { title: 'Win Amount Over Wager Limit ' + player.wagerLimit.maxWin, content: 'Please try again or contact Agent.', status: 'warning' };\n\t\t\tif( atRisk < player.wagerLimit.minRisk ) return { title: 'Risk Amount Under ' + player.wagerLimit.minRisk, content: 'Please try again or contact Agent.', status: 'warning' };\n\t\t\t//\n\n\t\t\t//check duplicate order\n\t\t\tconst pickIDs = picks.map(pick => pick.ID);\n\t\t\tconst existedOpenBets = await BetOrder.find({ Player: mongoose.Types.ObjectId(ctx.user._id), 'bet.action': action, isClosed: false }, 'ID Picks createdAt').populate({ path: 'Picks', select: 'ID' }).then(betOrders => betOrders.map(betOrder => ({ ID: betOrder.ID, createdAt: betOrder.createdAt, Picks: betOrder.Picks.map(Pick => Pick.ID)}) ));\n\t\t\tfor(let existedOpenBet of existedOpenBets){\n\t\t\t\tif(_.isEqual(pickIDs, existedOpenBet.Picks)) {\n\t\t\t\t\treturn { \n\t\t\t\t\t\ttitle: 'Order Duplicated', \n\t\t\t\t\t\tcontent: `#${existedOpenBet.ID.toUpperCase()} Submitted On:, ${moment(existedOpenBet.createdAt).format('ddd MMM DD - hh:mm A')}`, \n\t\t\t\t\t\tstatus: 'warning' \n\t\t\t\t\t}; \n\t\t\t\t}\n\t\t\t}\n\t\t\t//\n\n\t\t\t// check latest odd\n\t\t\tawait updateEvents();\n\n\t\t\tconst uniqEventIDs = _.uniqBy(picks.map(pick => pick.Event));\n\t\t\tconst mongooseEventIDs =  uniqEventIDs.map(eventID => ({ _id: mongoose.Types.ObjectId(eventID) }));\n\t\t\tconst latestEvents = await Event.find( { $or: mongooseEventIDs }).then(events => events.map(event => { event.action = action; return event; }));\n\t\t\tfor( let pick of picks){\n\t\t\t\tlet latestEvent = _.find(latestEvents, { _id: mongoose.Types.ObjectId(pick.Event) });\n\t\t\t\tif(!latestEvent) return { title: 'Event Error', content: 'Please pick other event.', status: 'warning' };\n\t\t\t\tlet { sport, league, period, cutOffAt,team: { away, home } } =  latestEvent;\n\t\t\t\tlet eventDetail = `${sport} ${league} ${period},${away} vs ${home}`;\n\t\t\t\tif(latestEvent.isOddExpired) return { title: `Odd Expired ${moment(cutOffAt).format('hh:mm A')}`, content: eventDetail, status: 'warning' };\n\t\t\t\tif(!latestEvent.isActionOddActivate) return { title: 'Event Not Available', content: eventDetail, status: 'warning' };\n\t\t\t\tlet latestOddPoint = latestEvent.actionOdd[pick.marked.oddPointTarget] || null;\n\t\t\t\tlet latestOddLine = latestEvent.actionOdd[pick.marked.oddLineTarget] || null;\n\t\t\t\tlet pickOddPoint = pick.marked.oddPoint || null;\n\t\t\t\tlet pickOddLine = pick.marked.oddLine || null;\n\t\t\t\tlet oddUpdatedDetail = `${pick.marked.oddType} ${pick.marked.oddTarget} ${ pickOddPoint ? `( ${pickOddPoint} ) ` : '' }${pickOddLine} to ${ latestOddPoint ? `( ${latestOddPoint} ) ` : '' }${latestOddLine}`;\n\t\t\t\tif(latestOddPoint !== pickOddPoint || latestOddLine !== pickOddLine) return { title: 'Odd Has Update', content: `${eventDetail}, ${oddUpdatedDetail}`, status: 'warning' };\n\t\t\t}\n\t\t\t//\n\t\t\n\t\t\tawait Event.update({ $or: mongooseEventIDs }, { $set: { isPicked: true } }, { multi: true });\n\n\t\t\tconst newBetOrder = new BetOrder({\n\t\t\t\tID: uniqid.process(),\n\t\t\t\tPlayer: ctx.user._id,\n\t\t\t\tAgent: player.Agent,\n\t\t\t\tbet: {\n\t\t\t\t\taction: action,\n\t\t\t\t\ttype: betType,\n\t\t\t\t\tamount: betAmount,\n\t\t\t\t\ttoWin: toWin,\n\t\t\t\t\tatRisk: atRisk,\n\t\t\t\t},\n\t\t\t\tresultAmount: null,\n\t\t\t\tisClosed: false,\n\t\t\t\tstatus: 'Pending',\n\t\t\t\tnote: {},\n\t\t\t\tupdatedAt: moment(),\n\t\t\t\tcreatedAt: moment()\n\t\t\t});\n\t\t\tconst savedBetOrder = await newBetOrder.save();\n\t\t\tconst newPicks = picks.map(pick => {\n\t\t\t\treturn new Pick({\n\t\t\t\t\tID: pick.ID,\n\t\t\t\t\tPlayer: ctx.user._id,\n\t\t\t\t\tAgent: player.Agent,\n\t\t\t\t\tBetOrder: savedBetOrder._id,\n\t\t\t\t\tEvent: pick.Event,\n\t\t\t\t\tmarked: pick.marked,\n\t\t\t\t\tisClosed: false,\n\t\t\t\t\tstatus: 'Pending',\n\t\t\t\t\tnote: {},\n\t\t\t\t\tupdatedAt: moment(),\n\t\t\t\t\tcreated: moment(),\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tconst savedPickIDs = await Pick.insertMany(newPicks).then(picks => picks.map(pick => pick._id));\n\t\t\tconst theBetOrder = await BetOrder.findOneAndUpdate({ _id: mongoose.Types.ObjectId(savedBetOrder._id) }, { $set: { Picks: savedPickIDs } }, { new: true });\n\t\t\tawait Player.findOneAndUpdate({ _id: mongoose.Types.ObjectId(ctx.user._id) }, { $inc: { 'credit.pending': atRisk }, $set: { 'credit.updatedAt': moment() } });\n\t\t\tconst agent = await Agent.findOneAndUpdate({_id: mongoose.Types.ObjectId(player.Agent) }, { $inc: { 'credit.pending': atRisk, 'credit.balance': -10 }, $set: { 'credit.updatedAt': moment() } }, { new: true });\n\n\t\t\tconst actionFee = await PriceRate.findOne({ item: 'PlayerActionFee' })\n\n\t\t\tawait Transaction.create({ \n\t\t\t\tAgent: agent._id,\n\t\t\t\tID: savedBetOrder.ID,\n\t\t\t\ttype: 'ActionFee',\n\t\t\t\tdescription: `(${ctx.user.username}) Action Fee`,\n\t\t\t\tamount: actionFee.credit,\n\t\t\t\tbalance: agent.credit.balance\n\t\t\t});\n\n\t\t\tawait SystemLog.create({ title: 'New Open Bet Order', content: `${ctx.user.username} created a open bet ${theBetOrder.title}`, status: 'success' });\n\n\t\t\tif(agent.notification.afterWager){\n\t\t\t\tconst agentNotify = new apn.Notification({\n\t\t\t\t\tsound: 'ping.aiff',\n\t\t\t\t\talert: `${player.username} had submitted ${theBetOrder.title}, At Risk: ${theBetOrder.bet.atRisk}, To Win: ${theBetOrder.bet.toWin}`,\n\t\t\t\t\ttopic: config.APN_TOPIC,\n\t\t\t\t\tpayload: { BetOrder: theBetOrder._id }\n\t\t\t\t})\n\n\t\t\t\tawait apnProvider.send(agentNotify, agent.notification.deviceToken)\n\t\t\t\tapnProvider.shutdown();\n\t\t\t}\n\n\t\t\treturn { title: 'SUCCESS', content: `#${savedBetOrder.ID.toUpperCase()} CREATED`, status: 'success' };\n\t\t} catch (e) {\n\t\t\tawait SystemLog.create({ title: 'New Open Bet Order Failed', content: `${ctx.user.username} created a open bet Failed ${e}`, status: 'danger'});\n\t\t\treturn { title: 'Unknow Error', content: 'Please try again later!', status: 'danger' };\n\t\t}\n\t}\n};\n"]}