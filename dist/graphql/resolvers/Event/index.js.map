{"version":3,"sources":["../../../../src/graphql/resolvers/Event/index.js"],"names":["Query","event","root","req","findOne","$or","_id","Types","ObjectId","ID","reviewEvents","find","isFinished","isPicked"],"mappings":";;;;;;;AAAA;;;;AACA;;;;;;AAEO,IAAMA,wBAAQ;AACpBC,MADoB,iBACdC,IADc,EACRC,GADQ,EACJ;AACf,SAAO,gBAAMC,OAAN,CAAc,EAAEC,KAAK,CAAE,EAAEC,KAAK,mBAASC,KAAT,CAAeC,QAAf,CAAwBL,IAAIG,GAA5B,CAAP,EAAF,EAA4C,EAAEG,IAAIN,IAAIM,EAAV,EAA5C,CAAP,EAAd,CAAP;AACA,EAHmB;AAIpBC,aAJoB,wBAIPR,IAJO,EAIDC,GAJC,EAIG;AACtB,SAAO,gBAAMQ,IAAN,CAAW,EAAEC,YAAY,KAAd,EAAqBC,UAAU,IAA/B,EAAX,CAAP;AACA;AANmB,CAAd","file":"index.js","sourcesContent":["import mongoose from 'mongoose';\nimport Event from '../../../models/Event';\n\nexport const Query = {\n\tevent(root, req){\n\t\treturn Event.findOne({ $or: [ { _id: mongoose.Types.ObjectId(req._id)}, { ID: req.ID } ] });\n\t},\n\treviewEvents(root, req){\n\t\treturn Event.find({ isFinished: false, isPicked: true,  });\n\t}\n};"]}