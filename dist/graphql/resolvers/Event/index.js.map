{"version":3,"sources":["../../../../src/graphql/resolvers/Event/index.js"],"names":["Query","event","root","req","findOne","$or","_id","Types","ObjectId","ID","reviewEvents","find","status","isPicked","isFinished","matchTime","$lte","add","Mutation","manuallyUpdateEventResult","ctx","MK","awayScore","homeScore","score","away","home","title","content","findOneAndUpdate","$set","new","newEvent"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEO,IAAMA,wBAAQ;AACpBC,MADoB,iBACdC,IADc,EACRC,GADQ,EACJ;AACf,SAAO,gBAAMC,OAAN,CAAc,EAAEC,KAAK,CAAE,EAAEC,KAAK,mBAASC,KAAT,CAAeC,QAAf,CAAwBL,IAAIG,GAA5B,CAAP,EAAF,EAA4C,EAAEG,IAAIN,IAAIM,EAAV,EAA5C,CAAP,EAAd,CAAP;AACA,EAHmB;AAIpBC,aAJoB,wBAIPR,IAJO,EAIDC,GAJC,EAIG;AACtB,SAAO,gBAAMQ,IAAN,CAAW,EAAEN,KAAK,CAAE,EAAEO,QAAQ,QAAV,EAAoBC,UAAU,IAA9B,EAAF,EAAwC,EAAEA,UAAU,IAAZ,EAAkBC,YAAY,KAA9B,EAAqCC,WAAW,EAAEC,MAAM,wBAASC,GAAT,CAAa,CAAb,EAAgB,GAAhB,CAAR,EAAhD,EAAxC,CAAP,EAAX,CAAP;AACA;AANmB,CAAd;;AASA,IAAMC,8BAAW;AACjBC,0BADiB,qCACSjB,IADT,QAC6DkB,GAD7D,EACiE;AAAA;;AAAA,MAAhDd,GAAgD,QAAhDA,GAAgD;AAAA,MAA3CG,EAA2C,QAA3CA,EAA2C;AAAA,MAAvCY,EAAuC,QAAvCA,EAAuC;AAAA,MAAnCC,SAAmC,QAAnCA,SAAmC;AAAA,MAAzBC,SAAyB,QAAzBA,SAAyB;AAAA,MAAdX,MAAc,QAAdA,MAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACjFY,YADiF,GACzE,EAAEC,MAAMH,SAAR,EAAmBI,MAAOH,SAA1B,EADyE;;AAAA,aAEpFF,OAAO,iBAAOA,EAFsE;AAAA;AAAA;AAAA;;AAAA,wCAE3D,EAAEM,OAAO,mBAAT,EAA8BC,SAAS,mBAAvC,EAA4DhB,QAAQ,QAApE,EAF2D;;AAAA;AAAA;AAAA,cAGhE,gBAAMiB,gBAAN,CAAuB,EAAExB,KAAK,CAAE,EAAEC,KAAK,mBAASC,KAAT,CAAeC,QAAf,CAAwBF,GAAxB,CAAP,EAAF,EAAwC,EAAEG,IAAIA,EAAN,EAAxC,CAAP,EAAvB,EAAsF,EAAEqB,MAAM,EAAEN,OAAOA,KAAT,EAAgBZ,QAAQA,MAAxB,EAAgCE,YAAY,IAA5C,EAAR,EAAtF,EAAoJ,EAAEiB,KAAK,IAAP,EAApJ,CAHgE;;AAAA;AAGjFC,eAHiF;AAAA,wCAIhFA,QAJgF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKvF;AANsB,CAAjB","file":"index.js","sourcesContent":["import mongoose from 'mongoose';\nimport Event from '../../../models/Event';\nimport moment from 'moment'\nimport config from '../../../config';\n\nexport const Query = {\n\tevent(root, req){\n\t\treturn Event.findOne({ $or: [ { _id: mongoose.Types.ObjectId(req._id)}, { ID: req.ID } ] });\n\t},\n\treviewEvents(root, req){\n\t\treturn Event.find({ $or: [ { status: 'Review', isPicked: true }, { isPicked: true, isFinished: false, matchTime: { $lte: moment().add(3, 'h') } }] });\n\t}\n};\n\nexport const Mutation = {\n\tasync manuallyUpdateEventResult(root, { _id, ID, MK, awayScore,homeScore, status }, ctx){\n\t\tconst score = { away: awayScore, home:  homeScore }\n\t\tif(MK !== config.MK) return { title: 'Not Authenticated', content: 'Please try again.', status: 'danger' };\n\t\tconst newEvent = await Event.findOneAndUpdate({ $or: [ { _id: mongoose.Types.ObjectId(_id)}, { ID: ID } ] }, { $set: { score: score, status: status, isFinished: true } }, { new: true })\n\t\treturn newEvent\n\t}\n}"]}