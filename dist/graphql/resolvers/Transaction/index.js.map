{"version":3,"sources":["../../../../src/graphql/resolvers/Transaction/index.js"],"names":["Query","transactions","root","ctx","startOfWeekNum","endOfWeekNum","user","role","findOne","_id","Types","ObjectId","agent","available","credit","pendingTransactions","find","Agent","createdAt","$gte","add","Number","startOf","$lte","endOf","sort","isClosed","populate","path","select","openBets","map","pending","process","ID","openBet","type","description","Player","username","title","amount","bet","atRisk","balance","concat","Mutation","adjustAgentCredit","req","MK","content","status","findOneAndUpdate","$inc","new","create","purchaseCredit","item","product","theID","platform","data","receipt","usd"],"mappings":"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","file":"index.js","sourcesContent":["import mongoose from 'mongoose';\nimport Transaction from '../../../models/Transaction';\nimport BetOrder from '../../../models/BetOrder';\nimport moment from 'moment';\nimport uniqid from 'uniqid';\nimport Agent from '../../../models/User.Agent';\nimport config from '../../../config';\nimport PriceRate from '../../../models/PriceRate';\nimport SystemLog from '../../../models/SystemLog';\nimport Receipt from '../../../models/Receipt';\n\nexport const Query = {\n\tasync transactions(root, { startOfWeekNum, endOfWeekNum }, ctx){\n\t\tif(ctx.user.role !== 'Agent') return null;\n\t\tconst agent = await\tAgent.findOne({ _id: mongoose.Types.ObjectId(ctx.user._id) });\n\t\tlet available = agent.credit.available;\n\t\tlet pendingTransactions = [];\n\t\tlet transactions = await Transaction.find({ \n\t\t\tAgent: mongoose.Types.ObjectId(ctx.user._id), \n\t\t\tcreatedAt: {$gte: moment().add(Number(startOfWeekNum), 'w').startOf('isoWeek'), \n\t\t\t\t$lte: moment().add(Number(endOfWeekNum), 'w').endOf('isoWeek') } \n\t\t}).sort({ createdAt: 'descending' });\n\t\tif( startOfWeekNum === 0 && endOfWeekNum === 0) {\n\t\t\tconst openBets = await BetOrder.find({ Agent: mongoose.Types.ObjectId(ctx.user._id), isClosed: false }).populate({ path: 'Player', select: 'username'}).sort({ createdAt: 'descending' });\n\t\t\tpendingTransactions = openBets.map(openBet => {\n\t\t\t\tlet pending = {\n\t\t\t\t\t_id: uniqid.process(),\n\t\t\t\t\tID: openBet.ID,\n\t\t\t\t\ttype: 'Pending',\n\t\t\t\t\tdescription: `(${openBet.Player.username}) placed ${openBet.title}`,\n\t\t\t\t\tcreatedAt: openBet.createdAt,\n\t\t\t\t\tamount: openBet.bet.atRisk,\n\t\t\t\t\tbalance: available\n\t\t\t\t};\n\t\t\t\tavailable += openBet.bet.atRisk;\n\t\t\t\treturn pending;\n\t\t\t});\n\t\t}\n\t\treturn pendingTransactions.concat(transactions);\n\t}\n};\n\nexport const Mutation = {\n\tasync adjustAgentCredit(root, req, ctx){\n\t\ttry {\n\t\t\tif(req.MK !== config.MK) return { title: 'Not Authenticated', content: 'Please try again.', status: 'danger' };\n\t\t\tconst agent = await Agent.findOneAndUpdate({ _id: mongoose.Types.ObjectId(req.Agent) }, { $inc: { 'credit.balance': req.amount } }, { new: true })\n\t\t\tif(!agent) return { title: 'Agent Not Found', content: 'Please try again', status: 'warning' };\n\t\t\tawait Transaction.create({\n\t\t\t\tID: uniqid.process(),\n\t\t\t\tAgent: req.Agent, \n\t\t\t\ttype: 'Adjust',\n\t\t\t\tdescription: `credit adjust`,\n\t\t\t\tcreatedAt: moment(),\n\t\t\t\tamount: req.amount,\n\t\t\t\tbalance: agent.credit.balance\n\t\t\t})\n\t\t\treturn { title: 'Agent Credit Adjust', content: `added ${req.amount}, new balance ${agent.credit.balance}`, status: 'success' };\n\t\t}catch(e){\n\t\t\treturn { title: 'Agent Credit Adjust Failed', content: e, status: 'danger' };\n\t\t}\n\t},\n\tasync purchaseCredit(root, req, ctx){\n\t\tif(ctx.user.role !== 'Agent' ) return { title: 'Not Authenticated', content: 'Please try again.', status: 'danger' };\n\t\ttry {\n\t\t\tconst product = await PriceRate.findOne({ item: req.item })\n\t\t\tconst agent = await Agent.findOneAndUpdate({ _id: mongoose.Types.ObjectId(ctx.user._id) }, { $inc: { 'credit.balance': product.credit } }, { new: true })\n\t\t\tconst theID = uniqid.process()\n\t\t\tawait Receipt.create({\n\t\t\t\tID: theID,\n\t\t\t\tAgent: ctx.user._id,\n\t\t\t\tplatform: req.platform,\n\t\t\t\tdata: req.receipt,\n\t\t\t\tusd: product.usd,\n\t\t\t\tcredit: product.credit,\n\t\t\t\titem: product.item,\n\t\t\t\tcreatedAt: moment()\n\t\t\t})\n\t\t\tawait Transaction.create({\n\t\t\t\tID: theID,\n\t\t\t\tAgent: ctx.user._id, \n\t\t\t\ttype: 'Purchase',\n\t\t\t\tdescription: `Purchased ${product.credit} credit ($${product.usd})`,\n\t\t\t\tcreatedAt: moment(),\n\t\t\t\tamount: product.credit,\n\t\t\t\tbalance: agent.credit.balance\n\t\t\t})\n\t\t\tawait SystemLog.create({ title: 'Credit Purchase Success', content: `${ctx.user.username} purchased credit ${req.item} ${req.platform} ${req.receipt}`, status: 'success'});\n\t\t\treturn { title: 'Completed', content: agent.credit.balance, status: 'success' };\n\t\t} catch(e) {\n\t\t\tawait SystemLog.create({ title: 'Credit Purchase Failed', content: `${ctx.user.username} purchase credit Failed ${req.item} ${req.platform} ${req.receipt} ${e}`, status: 'danger'});\n\t\t\treturn { title: 'Failed', content: 'Please try again.', status: 'danger' };\n\t\t}\n\t}\n}\n\n\n\n\n\n"]}