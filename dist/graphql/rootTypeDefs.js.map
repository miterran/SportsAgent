{"version":3,"sources":["../../src/graphql/rootTypeDefs.js"],"names":["Sign","User","Action","BetOrder","Setting","Event","Transaction","Notification","LogoCollect","PriceRate","SystemLog","schemaType","rootQuery","Query","rootMutation","Mutation","rootSubscription","Subscription","rootTypes","concat","type","Input"],"mappings":";;;;;;AAAA;;;;AAEA;;IAAYA,I;;AACZ;;IAAYC,I;;AACZ;;IAAYC,M;;AACZ;;IAAYC,Q;;AACZ;;IAAYC,O;;AACZ;;IAAYC,K;;AACZ;;IAAYC,W;;AACZ;;IAAYC,Y;;AACZ;;IAAYC,W;;AACZ;;IAAYC,S;;AACZ;;IAAYC,S;;;;;;AAEZ,IAAMC,uIAAN;;AASA,IAAMC,2CAEFZ,KAAKa,KAFH,cAGFZ,KAAKY,KAHH,cAIFX,OAAOW,KAJL,cAKFV,SAASU,KALP,cAMFR,MAAMQ,KANJ,cAOFP,YAAYO,KAPV,cAQFL,YAAYK,KARV,cASFJ,UAAUI,KATR,cAUFH,UAAUG,KAVR,YAAN;AAaA,IAAMC,iDAEFd,KAAKe,QAFH,cAGFb,OAAOa,QAHL,cAIFX,QAAQW,QAJN,cAKFd,KAAKc,QALH,YAAN;AAQA,IAAMC,yDAEFT,aAAaU,YAFX,YAAN;;AAMA,IAAMC,YAAY,CACjBP,UADiB,EAEjBC,SAFiB,EAGjBE,YAHiB,EAIjBE,gBAJiB,EAMhBG,MANgB,0BAOhBA,MAPgB,CAOThB,SAASiB,IAPA,EAQhBD,MARgB,CAQTZ,aAAaa,IARJ,EAShBD,MATgB,CASTjB,OAAOmB,KATE,EAUhBF,MAVgB,CAUTV,UAAUY,KAVD,CAAlB;;kBAYeH,S","file":"rootTypeDefs.js","sourcesContent":["import modelTypeDefs from './modelTypeDefs';\n\nimport * as Sign from './resolvers/Sign/typeDefs';\nimport * as User from './resolvers/User/typeDefs';\nimport * as Action from './resolvers/Action/typeDefs';\nimport * as BetOrder from './resolvers/BetOrder/typeDefs';\nimport * as Setting from './resolvers/Setting/typeDefs';\nimport * as Event from './resolvers/Event/typeDefs';\nimport * as Transaction from './resolvers/Transaction/typeDefs';\nimport * as Notification from './resolvers/Notification/typeDefs';\nimport * as LogoCollect from './resolvers/LogoCollect/typeDefs';\nimport * as PriceRate from './resolvers/PriceRate/typeDefs';\nimport * as SystemLog from './resolvers/SystemLog/typeDefs';\n\nconst schemaType = `\n\tscalar Date\n\tschema {\n\t\tquery: RootQuery\n\t\tmutation: RootMutation\n\t\tsubscription: RootSubscription\n\t}\n`;\n\nconst rootQuery = `\n\ttype RootQuery {\n\t\t${Sign.Query}\n\t\t${User.Query}\n\t\t${Action.Query}\n\t\t${BetOrder.Query}\n\t\t${Event.Query}\n\t\t${Transaction.Query}\n\t\t${LogoCollect.Query}\n\t\t${PriceRate.Query}\n\t\t${SystemLog.Query}\n\t}\n`;\nconst rootMutation = `\n\ttype RootMutation {\n\t\t${Sign.Mutation}\n\t\t${Action.Mutation}\n\t\t${Setting.Mutation}\n\t\t${User.Mutation}\n\t}\n`;\nconst rootSubscription = `\n\ttype RootSubscription {\n\t\t${Notification.Subscription}\n\t}\n`;\n\nconst rootTypes = [ \n\tschemaType,\n\trootQuery,\n\trootMutation,\n\trootSubscription\n]\n\t.concat(modelTypeDefs)\n\t.concat(BetOrder.type)\n\t.concat(Notification.type)\n\t.concat(Action.Input)\n\t.concat(PriceRate.Input)\n\nexport default rootTypes;"]}